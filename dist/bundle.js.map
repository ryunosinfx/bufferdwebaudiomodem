{"version":3,"sources":["webpack://bufferdwebaudiomodem/./util/V.js","webpack://bufferdwebaudiomodem/./node_modules/b64util.es/b64util.js","webpack://bufferdwebaudiomodem/./node_modules/webaudio-modem/util/B64Util.js","webpack://bufferdwebaudiomodem/./node_modules/webaudio-modem/util/ProcessUtil.js","webpack://bufferdwebaudiomodem/./node_modules/webaudio-modem/WebAudioModemBufferedCore.js","webpack://bufferdwebaudiomodem/./node_modules/reedsolomon.es/ReedSolomon.js","webpack://bufferdwebaudiomodem/./node_modules/convolutionalcode.es/ConvolutionalCode.js","webpack://bufferdwebaudiomodem/./bufferdwebaudiomodem.js","webpack://bufferdwebaudiomodem/./index.js"],"names":["V","c","tagName","d","createElement","a","elm","child","appendChild","q","selector","querySelector","gid","id","getElementById","ga","attrName","getAttribute","sa","value","setAttribute","qa","querySelectorAll","ael","eventName","func","elemnt","addEventListener","init","input","label","textContent","e","target","fireEvent","eventType","evObj","createEvent","initEvent","dispatchEvent","document","b","body","max","RB64Regex","RB64UrlRegex","td","TextDecoder","te","TextEncoder","B64Util","from64u","u","from64","toB64","u8aToUtf8","b64ToU8a","to64u","s","toB64u","to64","len","length","pageNum","Math","ceil","results","j","start","size","p","end","substring","ab","encode","String","fromCharCode","Uint8Array","push","btoa","join","atob","i","charCodeAt","console","log","u8a2b64","u8a","bs","u8a2bs","u8a2Hex","b64toHex","s2u8a","s2hex","hex","hex2s","hex2u8a","aToB64","buffer","b64uToAb","b64Tobs","b64u2bs","r","match","map","h","parseInt","hex2b64","hex2bs","ab2bs","ai","aToB64u","b64","aToHex","rl","toString","slice","bs2u8a","l","ArrayBuffer","isB64","test","isB64u","decode","bs2utf8","dataURI2bs","dURI","split","dataURI2u8a","ab2dataURI","type","b64ToBlob","Blob","joinU8as","u8as","set","b64u","sigs","Hasher","sha256","sig","m","sc","sha384","sha512","sha1","byteLength","window","crypto","subtle","digest","fill","u16a","Uint16Array","u8a2hex","ProcessUtil","sleep","ms","Promise","resolve","setTimeout","subCount","harf","floor","BaseSetting","getAudioContext","webkitAudioContext","AudioContext","frequenciesb","frequencies","audioContext","pad","Oscillator","constructor","alertMsg","frequenciesLen","inited","progress","onProgress","masterGain","createGain","gain","sinusoids","oscillators","frequency","sine","createOscillator","volume","connect","destination","mute","osc","encodeCharcode","charCode","duration","alert","convertTextToHaming","text","result","idx","char","bits","b1","b2","b3","b4","c1","c2","c3","byte","onComplete","onCompleteMute","hasMuteTimeOnEnd","encodeExec","pause","pauseDuration","activeDuration","timeBetweenChars","hamings","hamingsLen","Date","now","currentDuration","dd","offset","times","onProgressExec","getProgress","Reciver","fftSize","smoothingTimeConstant","minDecibels","history","unsherpMaskGain","onStateChange","analyser","createAnalyser","stream","navigator","mediaDevices","getUserMedia","audio","microphone","createMediaStreamSource","err","outputType","isStop","setBinVlueThreshold","threshold","binVlueThreshold","setSpanDuration","spanDuration","setUnsherpMaskGain","setOutputType","output","chars","onOutput","stop","state","STOP","calcTargetIndexes","targetIndexes","hzPerBin","sampleRate","frequencyBinCount","f","index","valitadeHaming","s1","s2","s3","bit","isFailed","codn","isValid","codnSuccess","parse","bufferedData","indexCount","targetIndexCount","time","parseExec","timeEnd","parsecharContinuous","part","thresholds","charContinuous","lastChar","bytes","calced","data","Array","count","lenHalf","bitData","lastValue","abs","uint8","base","avg","hamingResult","lastState","isReadable","splice","parsecharContinuous1","startUnixTime","endUnixTime","min","readByte","pursePerPart","parsed","spanOffset","cache","cacheNulls","nullsCount","nextPeakTime","diff","weight","firstChangeChar","currentWeight","targetChar","getMaxCountKey","targetCharNulls","clearMap","parseParUnitTime","peakList","k","targetCharCount","startTimeInput","parseCounter","changeCount","k2","startTime","parts","isOdd","parsedCounts","preDecode","isSuccess","unsharpFilter","list","width","row","kernel","getFilterKernel","amount","x","y","v","buildPeakList","maxes","mins","dBuffers","lastBuffers","lastDBuffers","image","pop","rowIndex","offseted","dValue","lastDValue","pValue","firstTime","parsedMax","maxK","error","countMap","maxValue","maxKey","key","Object","entries","obj","keys","WAITING","thesholdMs","thesholdMsEnd","futurOffset","lastOn","lastEnd","isRecording","getByteFrequencyData","selected","selectedMap","selectedSate","PARSING","FAIL","RECORDING","GenericGF","primitive","generatorBase","expTable","Int32Array","logTable","zero","GenericGFPoly","one","getZero","getOne","buildMonomial","degree","coefficient","ReedSolomonException","coefficients","addOrSubtract","exp","inverse","multiply","getSize","getGeneratorBase","field","coefficientsLength","firstNonZero","newCoefficients","getCoefficients","getDegree","isZero","getCoefficient","evaluateAt","other","isSmallLonger","smallerCoefficients","largerCoefficients","lenLarge","sumDiff","lengthDiff","param","multiplyScalar","multiplyGF","aCoefficients","aLength","bCoefficients","bLength","product","aCoeff","scalar","multiplyByMonomial","divide","quotient","remainder","denominatorLeadingTerm","inverseDenominatorLeadingTerm","degreeDifference","scale","term","iterationQuotient","alphaPower","ReedSolomonDecoder","isSloppy","received","twoS","poly","syndromeCoefficients","scLen","noError","evaled","syndrome","sigma","omega","runEuclideanAlgorithm","errorLocations","findErrorLocations","errorMagnitudes","findErrorMagnitudes","errorLocation","position","R","temp","rLast","tLast","t","rLastLast","tLastLast","rLastDegree","dltInverse","rDegree","degreeDiff","sigmaTildeAtZero","errorLocator","numErrors","errorEvaluator","xiInverse","denominator","termPlus1","ReedSolomonEncoder","cachedGenerators","buildGenerator","lastIndex","lastGenerator","nextGenerator","toEncode","ecBytes","dataBytes","generator","infoCoefficients","info","info2","numZeroCoefficients","Error","message","AZTEC_DATA_12","bitNum","AZTEC_DATA_10","AZTEC_DATA_6","AZTEC_PARAM","QR_CODE_FIELD_256","DATA_MATRIX_FIELD_256","AZTEC_DATA_8","MAXICODE_FIELD_64","ByteAs16bit","ByteAs14bit","ByteAs12bit","ByteAs10bit","ByteAs8bit","ByteAs6bit","ByteAs4bit","presets","Cache","ReedSolomonES","encodeRaw","i32a","errorCorrectionRedundantUnitCount","JSON","stringify","rsEncoder","pow","ggf","decodeRaw","rsDecoder","copyToU8a","dataLen","lastOne","newDataLength","charCounter","fill0","octet","current","loopCount","bitStr","copyToI32a","isFillBit","lcm","bitnumHarf","add","mod","presetName","errorCorrectionRetio","preset","maxWordLength","retio","N","wordCount","wordKtmp","wordK","leftLength","wordKCurrent","tempN","encorded","decodeStrict","K","toDecode","na","decorded","Util","hammingWeightByInt","codewordBit","hammingWeightByStr","charAt","getCodeWordStr","codeWordBitCount","codeWord","tmpCdWrd","reverse","getCodeWordBits","getUint8BitList","uint8Cache","toU8aFromBitArray","flatList","newU8a","sub","CodifEsempioLibro540","totStatesLog","totCodeBit","BitLength2","State","getTotStatesLog","isTotStatesLogSet","totStatesLogSet","setTotStatesLog","myState","getMyState","hashCode","prime","setMyState","StateAndInfoBit","myStateInt","myInfoBit","myCodeWord","initState","getMyInfoBit","getMyCodeWord","getMyCodeWordStr","getMyCodeWordBits","StateWithInflow","isInitialized","indexVect","getMyInflows","myInflows","setInFlow","inFlow","sb","myInflows0","myInflows1","DecTrallisColumn","totStates","prev","refTrellis","column","setFirstSection","imAmFirst","setGeneralSection","getColumn","setColumn","startIndex","col","DecTrallisCell","setFake","setStarter","createWordSection","its","orderedFinalStates","zeroMetric","rejoinZeroStat","minMetric","minState","stateCons","tempMetric","from","codeParBit","recursivePrint","infowordsIcarry","flushoutOrder","changed","fromFlow","currentCol","currentFormFlow","currentForm","prevCol","isActive","prevMyWholeMetric","getMyWholeMetric","setMyWholeMetric","setMyInfoBit","isActiveForGraph","myWholeMetric","Trellis","trellisConfig","trellisMap","Map","codingCorrespMap","loadTrellis","lenPlus","ouputAlreadyConsid","infoBit","codeword","outState","to","fromKey","itOnKeys","get","values","sort","codedOut","stateInput","stWithInfoTmp1","stWithInfoTmp2","Encoder","trellis","codeWordBit","reset","infoBitInput","outWord","DecodingTrallisSupport","refTrallis","myColumns","createDecTrallisColumn","myTime","addSection","myCol","newCol","decOutput","VitDecoder","myDecSupp","addTransmittedWord","word","codeWordNum","ConvolutionalCode","encoder","decoder","bitsList","lastList","cwBits","flat","bitsLista","countByte","defaultConf","RSByteLength","bufferdwebaudiomodem","condition","oscillator","reciver","msPerByte","onEncodeProgress","isUseRS","errorCrrectionReduntantRetio","isUseCC","ccRate","correctRate","inputU8a","inputU8aEncoded","includes","funcOnEncodeProgress","decodeStart","decodeU8a","funcOnDecoded","decodeStop","setOnEncodeProgress","setOnDecoded","webaudiomodem","encodBtnId","clearBtnId","encodeInputId","progressId","transmissionTimeId","incrementTimesId","encodBtnElm","clearBtnElm","encodeInputElm","progressElm","transmissionTimeElm","incrementTimesElm","val","tt","it","calcSecFunc","progressBarFunc","style","removeAttribute","blur","Decoder","outputId","clearId","codeId","recieverSateId","outputElm","clearbtnElm","codeElm","recieverSateElm","onTrace","WebAudioModem","tabIds","pauseDurationElm","activeDurationElm","binVlueThresholdElm","spanDurationElm","unsherpMaskGainElm","isUseRSElm","ecrResioElm","bitNumElm","isUseCCElm","ccRateElm","buildConf","onDecoded","buildDecoder","buildEncoder","switchView","tabId","WebAudioModemView","wam","showTab","selectTabId","suffix","tabIdsWithSuffix","showTabExec","prefixis","prefix","cn","classList","contains","remove","elmSelected"],"mappings":"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","file":"bundle.js","sourcesContent":["export class V {\n\tstatic d = document;\n\tstatic b = document.body;\n\tstatic c(tagName) {\n\t\treturn V.d.createElement(tagName);\n\t}\n\tstatic a(elm, child) {\n\t\treturn elm.appendChild(child);\n\t}\n\tstatic q(selector) {\n\t\treturn V.d.querySelector(selector);\n\t}\n\tstatic gid(id) {\n\t\treturn V.d.getElementById(id);\n\t}\n\tstatic ga(elm, attrName) {\n\t\treturn elm.getAttribute(attrName);\n\t}\n\tstatic sa(elm, attrName, value) {\n\t\treturn elm.setAttribute(attrName, value);\n\t}\n\tstatic qa(selector) {\n\t\treturn V.d.querySelectorAll(selector);\n\t}\n\tstatic ael(elm, eventName, func) {\n\t\tconst elemnt = typeof elm === 'string' ? V.gid(elm) : elm;\n\t\telemnt.addEventListener(eventName, func);\n\t}\n\tstatic init() {\n\t\t// config behaviour\n\t\tfor (let input of V.qa('input')) {\n\t\t\tconst label = V.q(`label[for=\"${V.ga(input, 'id')}\"] [data-val]`);\n\t\t\tlabel.textContent = input.value;\n\t\t\tV.ael(input, 'change', (e) => {\n\t\t\t\tlabel.textContent = e.target.value;\n\t\t\t});\n\t\t}\n\t}\n\tstatic fireEvent(elm, eventType) {\n\t\tif (!elm) {\n\t\t\treturn;\n\t\t}\n\t\t// Thanks to https://stackoverflow.com/a/2706236\n\t\tif (elm.fireEvent) {\n\t\t\telm.fireEvent('on' + eventType);\n\t\t} else {\n\t\t\tconst evObj = V.d.createEvent('Events');\n\t\t\tevObj.initEvent(eventType, true, false);\n\t\t\telm.dispatchEvent(evObj);\n\t\t}\n\t}\n}\n","const max = 50000;\nconst RB64Regex = /^[0-9a-zA-Z/\\+]+[=]{0,3}$/;\nconst RB64UrlRegex = /^[-_0-9a-zA-Z]+$/;\nconst td = new TextDecoder('utf-8');\nconst te = new TextEncoder();\nexport class B64Util {\n\tstatic from64u(u) {\n\t\treturn B64Util.from64(B64Util.toB64(u));\n\t}\n\tstatic from64(d) {\n\t\treturn B64Util.u8aToUtf8(B64Util.b64ToU8a(d));\n\t}\n\tstatic to64u(s) {\n\t\treturn B64Util.toB64u(B64Util.to64(s));\n\t}\n\tstatic to64(s) {\n\t\tconst len = s.length;\n\t\tconst pageNum = Math.ceil(len / max);\n\t\tconst results = [];\n\t\tfor (let j = 0; j < pageNum; j++) {\n\t\t\tconst start = max * j;\n\t\t\tconst size = len - start;\n\t\t\tconst p = size > max ? max : size > 0 ? size : len;\n\t\t\tconst end = start + p;\n\t\t\tconst input = s.substring(start, end);\n\t\t\tconst ab = te.encode(input);\n\t\t\tconst c = String.fromCharCode(...new Uint8Array(ab));\n\t\t\tresults.push(c);\n\t\t}\n\t\treturn btoa(results.join(''));\n\t}\n\tstatic b64ToU8a(d) {\n\t\tconst a = atob(d);\n\t\tconst b = new Uint8Array(a.length);\n\t\tfor (let i = 0; i < b.length; i++) {\n\t\t\ttry {\n\t\t\t\tb[i] = a.charCodeAt(i);\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(i);\n\t\t\t\tconsole.log(e);\n\t\t\t}\n\t\t}\n\t\treturn b;\n\t}\n\tstatic u8a2b64(u8a) {\n\t\tconst bs = u8a ? B64Util.u8a2bs(u8a) : null;\n\t\treturn bs ? btoa(bs) : null;\n\t}\n\tstatic u8a2Hex(u8a) {\n\t\tconst d = u8a ? B64Util.u8a2b64(u8a) : null;\n\t\treturn d ? B64Util.b64toHex(d) : null;\n\t}\n\tstatic s2u8a(s) {\n\t\tconst d = B64Util.to64(s);\n\t\treturn B64Util.b64ToU8a(d);\n\t}\n\tstatic s2hex(s) {\n\t\tconst d = B64Util.to64(s);\n\t\tconst hex = B64Util.b64toHex(d);\n\t\treturn hex;\n\t}\n\tstatic hex2s(hex) {\n\t\tconst u8a = B64Util.hex2u8a(hex);\n\t\tconst d = B64Util.aToB64(u8a.buffer);\n\t\treturn B64Util.from64(d);\n\t}\n\tstatic b64uToAb(b) {\n\t\tconst d = B64Util.toB64(b);\n\t\treturn B64Util.b64ToU8a(d).buffer;\n\t}\n\tstatic b64Tobs(d) {\n\t\treturn B64Util.u8a2bs(B64Util.b64ToU8a(d));\n\t}\n\tstatic b64u2bs(d) {\n\t\treturn B64Util.u8a2bs(B64Util.b64ToU8a(d));\n\t}\n\tstatic u8a2bs(u8a) {\n\t\tconst r = [];\n\t\tfor (let e of u8a) {\n\t\t\tr.push(String.fromCharCode(e));\n\t\t}\n\t\treturn r.join('');\n\t}\n\tstatic hex2u8a(hex) {\n\t\treturn new Uint8Array(\n\t\t\thex.match(/[0-9a-f]{2}/gi).map((h) => {\n\t\t\t\treturn parseInt(h, 16);\n\t\t\t})\n\t\t);\n\t}\n\tstatic hex2b64(hex) {\n\t\treturn B64Util.u8a2b64(B64Util.hex2u8a(hex));\n\t}\n\tstatic hex2bs(hex) {\n\t\treturn B64Util.u8a2bs(B64Util.hex2u8a(hex));\n\t}\n\tstatic ab2bs(ab) {\n\t\treturn B64Util.u8a2bs(new Uint8Array(ab));\n\t}\n\tstatic aToB64(ai) {\n\t\tconst ab = ai.buffer ? ai.buffer : ai;\n\t\treturn btoa(B64Util.ab2bs(ab));\n\t}\n\tstatic aToB64u(ai) {\n\t\tconst b = B64Util.aToB64(ai);\n\t\treturn B64Util.toB64u(b);\n\t}\n\tstatic b64toHex(b64) {\n\t\tconst u8a = B64Util.b64ToU8a(b64);\n\t\treturn B64Util.aToHex(u8a);\n\t}\n\tstatic aToHex(ai) {\n\t\tconst u8a = ai.buffer ? new Uint8Array(ai.buffer) : new Uint8Array(ai);\n\t\tconst rl = [];\n\t\tfor (let i of u8a) {\n\t\t\tconst a = i.toString(16);\n\t\t\trl.push(('00' + a).slice(-2));\n\t\t}\n\t\treturn rl.join('');\n\t}\n\tstatic bs2u8a(bs) {\n\t\tconst l = bs.length;\n\t\tconst a = new Uint8Array(new ArrayBuffer(l));\n\t\tfor (let i = 0; i < l; i++) {\n\t\t\ta[i] = bs.charCodeAt(i);\n\t\t}\n\t\treturn a;\n\t}\n\tstatic isB64(d) {\n\t\treturn d && typeof d === 'string' && d.length % 4 === 0 && RB64Regex.test(d);\n\t}\n\tstatic isB64u(d) {\n\t\treturn d && typeof d === 'string' && d.length % 4 === 0 && RB64Regex.test(d);\n\t}\n\tstatic u8aToUtf8(u8a) {\n\t\treturn td.decode(u8a.buffer);\n\t}\n\tstatic bs2utf8(bs) {\n\t\tconst u8a = B64Util.bs2u8a(bs);\n\t\treturn td.decode(u8a.buffer);\n\t}\n\tstatic dataURI2bs(dURI) {\n\t\treturn atob(dURI.split(',')[1]);\n\t}\n\tstatic dataURI2u8a(dURI) {\n\t\treturn B64Util.bs2u8a(atob(dURI.split(',')[1]));\n\t}\n\tstatic ab2dataURI(ab, type = 'application/octet-stream') {\n\t\tconst b = btoa(B64Util.ab2bs(ab));\n\t\treturn 'data:' + type + ';base64,' + b;\n\t}\n\tstatic b64ToBlob(d, type) {\n\t\tconst u8a = B64Util.b64ToU8a(d);\n\t\treturn new Blob([u8a.buffer], { type });\n\t}\n\tstatic joinU8as(u8as) {\n\t\tlet l = 0;\n\t\tfor (let u8a of u8as) {\n\t\t\tl += u8a.length;\n\t\t}\n\t\tconst r = new Uint8Array(l);\n\t\tlet s = 0;\n\t\tfor (let u8a of u8as) {\n\t\t\tr.set(u8a, s);\n\t\t\ts += u8a.length;\n\t\t}\n\t\treturn r;\n\t}\n\tstatic toB64u(b) {\n\t\treturn b ? b.split('+').join('-').split('/').join('_').split('=').join('') : b;\n\t}\n\tstatic toB64(b64u) {\n\t\tconst l = b64u.length;\n\t\tconst c = l % 4 > 0 ? 4 - (l % 4) : 0;\n\t\tlet b = b64u.split('-').join('+').split('_').join('/');\n\n\t\tfor (let i = 0; i < c; i++) {\n\t\t\tb += '=';\n\t\t}\n\t\treturn b;\n\t}\n\tstatic async sigs(s) {\n\t\treturn Hasher.sha256(B64Util.s2u8a(s), 1, 'hex');\n\t}\n\tstatic async sig(u8a) {\n\t\treturn Hasher.sha256(u8a, 1, 'hex');\n\t}\n}\nexport class Hasher {\n\tstatic async sha256(m, sc = 1, type = 'base64') {\n\t\treturn await Hasher.d(m, 'SHA-256', sc, type);\n\t}\n\tstatic async sha384(m, sc = 1, type = 'base64') {\n\t\treturn await Hasher.d(m, 'SHA-384', sc, type);\n\t}\n\tstatic async sha512(m, sc = 1, type = 'base64') {\n\t\treturn await Hasher.d(m, 'SHA-512', sc, type);\n\t}\n\tstatic async sha1(m, sc = 1, type = 'base64') {\n\t\treturn await Hasher.d(m, 'SHA-1', sc, type);\n\t}\n\tstatic async d(m, a = 'SHA-256', sc = 1, type) {\n\t\tlet r = m.byteLength ? m : m.buffer ? m.buffer : te.encode(m);\n\t\tfor (let i = 0; i < sc; i++) {\n\t\t\tr = await window.crypto.subtle.digest(a, r);\n\t\t}\n\t\treturn type === 'base64' ? B64Util.aToB64(r) : type === 'base64url' ? B64Util.aToB64u(r) : B64Util.aToHex(r);\n\t}\n}\n","const max = 50000;\nconst RB64Regex = /^[0-9a-zA-Z/\\+]+[=]{0,3}$/;\nexport class B64Util {\n    static from64(d) {\n        const a = new Uint8Array(1);\n        a.fill(0);\n        const b = B64Util.b64ToU8a(d);\n        const u8a = b.length % 2 ? B64Util.joinU8as([b, a]) : b;\n        const u16a = new Uint16Array(u8a.buffer);\n        const l = u16a.length;\n        const c = Math.ceil(l / max);\n        const r = [];\n        for (let j = 0; j < c; j++) {\n            const start = max * j;\n            const size = l - start;\n            const p = size > max ? max : size > 0 ? size : l;\n            const u = u16a.slice(start, start + p);\n            r.push(String.fromCharCode(...u));\n        }\n        return r.join('');\n    }\n    static to64(s) {\n        const len = s.length;\n        const pageNum = Math.ceil(len / max);\n        const results = [];\n        for (let j = 0; j < pageNum; j++) {\n            const start = max * j;\n            const size = len - start;\n            const p = size > max ? max : size > 0 ? size : len;\n            const end = start + p;\n            const input = s.substring(start, end);\n            const u = new Uint16Array(p);\n            for (let i = 0; i < p; i++) {\n                u[i] = input.charCodeAt(i);\n            }\n            const c = String.fromCharCode(...new Uint8Array(u.buffer));\n            results.push(c);\n        }\n        return btoa(results.join(''));\n    }\n    static b64ToU8a(d) {\n        const a = atob(d);\n        const b = new Uint8Array(a.length);\n        for (let i = 0; i < b.length; i++) {\n            try {\n                b[i] = a.charCodeAt(i);\n            } catch (e) {\n                console.log(i);\n                console.log(e);\n            }\n        }\n        return b;\n    }\n    static u8a2b64(u8a) {\n        const bs = u8a ? B64Util.u8a2bs(u8a) : null;\n        return bs ? btoa(bs) : null;\n    }\n    static s2u8a(s) {\n        const d = B64Util.to64(s);\n        return B64Util.b64ToU8a(d);\n    }\n    static s2hex(s) {\n        const d = B64Util.to64(s);\n        const hex = B64Util.b64toHex(d);\n        return hex;\n    }\n    static u8a2hex(u8a) {\n        return B64Util.aToHex(u8a);\n    }\n    static hex2s(hex) {\n        const u8a = B64Util.hex2u8a(hex);\n        const d = B64Util.aToB64(u8a.buffer);\n        return B64Util.from64(d);\n    }\n    static b64uToAb(b) {\n        const d = B64Util.toB64(b);\n        return B64Util.b64ToU8a(d).buffer;\n    }\n    static u8a2bs(u8a) {\n        const r = [];\n        for (let e of u8a) {\n            r.push(String.fromCharCode(e));\n        }\n        return r.join('');\n    }\n    static hex2u8a(hex) {\n        return new Uint8Array(\n            hex.match(/[0-9a-f]{2}/gi).map((h) => {\n                return parseInt(h, 16);\n            })\n        );\n    }\n\n    static ab2bs(ab) {\n        return B64Util.u8a2bs(new Uint8Array(ab));\n    }\n    static aToB64(ai) {\n        const ab = ai.buffer ? ai.buffer : ai;\n        return btoa(B64Util.ab2bs(ab));\n    }\n    static aToB64u(ai) {\n        const b = B64Util.aToB64(ai);\n        return B64Util.toB64u(b);\n    }\n    static b64toHex(b64) {\n        const u8a = B64Util.b64ToU8a(b64);\n        return B64Util.aToHex(u8a);\n    }\n    static aToHex(ai) {\n        const u8a = ai.buffer ? new Uint8Array(ai.buffer) : new Uint8Array(ai);\n        const rl = [];\n        for (let i of u8a) {\n            const a = i.toString(16);\n            rl.push(('00' + a).slice(-2));\n        }\n        return rl.join('');\n    }\n    static bs2u8a(bs) {\n        const l = bs.length;\n        const a = new Uint8Array(new ArrayBuffer(l));\n        for (let i = 0; i < l; i++) {\n            a[i] = bs.charCodeAt(i);\n        }\n        return a;\n    }\n    static isB64(d) {\n        return d && typeof d === 'string' && d.length % 4 === 0 && RB64Regex.test(d);\n    }\n    static bs2utf8(bs) {\n        const u8a = B64Util.bs2u8a(bs);\n        return td.decode(u8a.buffer);\n    }\n    static dataURI2bs(dURI) {\n        return atob(dURI.split(',')[1]);\n    }\n    static dataURI2u8a(dURI) {\n        return B64Util.bs2u8a(atob(dURI.split(',')[1]));\n    }\n    static ab2dataURI(ab, type = 'application/octet-stream') {\n        const b = btoa(B64Util.ab2bs(ab));\n        return 'data:' + type + ';base64,' + b;\n    }\n    static joinU8as(u8as) {\n        let l = 0;\n        for (let u8a of u8as) {\n            l += u8a.length;\n        }\n        const r = new Uint8Array(l);\n        let s = 0;\n        for (let u8a of u8as) {\n            r.set(u8a, s);\n            s += u8a.length;\n        }\n        return r;\n    }\n    static toB64u(b) {\n        return b ? b.split('+').join('-').split('/').join('_').split('=').join('') : b;\n    }\n    static toB64(b64u) {\n        const l = b64u.length;\n        const c = l % 4 > 0 ? 4 - (l % 4) : 0;\n        let b = b64u.split('-').join('+').split('_').join('/');\n\n        for (let i = 0; i < c; i++) {\n            b += '=';\n        }\n        return b;\n    }\n}\n","export class ProcessUtil {\n    static sleep(ms) {\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve();\n            }, ms);\n        });\n    }\n}\n","import { B64Util } from './util/B64Util.js';\nimport { ProcessUtil } from './util/ProcessUtil.js';\n\nconst subCount = 7;\nconst harf = Math.floor(subCount / 2);\nclass BaseSetting {\n    static frequenciesb = [392, 784, 1046.5, 1318.5, 1568, 1864.7, 2093, 2637];\n    static frequencies = [697, 770, 852, 941, 1209, 1336, 1477, 1633];\n    static audioContext = window.webkitAudioContext ? new webkitAudioContext() : new AudioContext();\n    static getAudioContext() {\n        return window.webkitAudioContext ? new webkitAudioContext() : new AudioContext();\n        // return BaseSetting.audioContext;\n    }\n    static pad = '0b00000000';\n}\nexport class Oscillator {\n    constructor(frequencies = BaseSetting.frequencies, alertMsg = 'click widow somewehere!.') {\n        this.frequencies = frequencies;\n        this.frequenciesLen = frequencies.length;\n        this.inited = false;\n        this.alertMsg = alertMsg;\n        window.addEventListener('click', (e) => {\n            this.init();\n        });\n        this.progress = 0;\n        this.onProgress = (progress) => {};\n    }\n    async init() {\n        if (this.inited) {\n            return;\n        }\n        this.audioContext = BaseSetting.getAudioContext();\n        const masterGain = this.audioContext.createGain();\n        masterGain.gain.value = 1.0 / this.frequencies.length;\n        const sinusoids = [];\n        const oscillators = [];\n        for (const frequency of this.frequencies) {\n            const sine = this.audioContext.createOscillator();\n            sine.type = 'square'; //square sine\n            sine.frequency.value = frequency;\n            sine.start();\n            sinusoids.push(sine);\n            const volume = this.audioContext.createGain();\n            volume.gain.value = 0;\n            oscillators.push(volume);\n            sine.connect(volume);\n            volume.connect(masterGain);\n        }\n        // connect nodes\n        masterGain.connect(this.audioContext.destination);\n        this.oscillators = oscillators;\n        this.inited = true;\n    }\n    mute() {\n        for (const osc of this.oscillators) {\n            osc.gain.value = 0;\n        }\n    }\n    async encodeCharcode(charCode, duration) {\n        if (!this.oscillators) {\n            alert(this.alertMsg);\n            return;\n        }\n        for (let i = 0; i < this.frequenciesLen; i++) {\n            const osc = this.oscillators[i];\n            osc.gain.value = charCode & (1 << i) ? 1 : 0;\n        }\n        await ProcessUtil.sleep(duration);\n    }\n    /**\n     *\n     * @param {string/Uint8Array} text\n     */\n    convertTextToHaming(text) {\n        const result = [];\n        const hex = typeof text === 'string' ? B64Util.s2hex(text) : B64Util.u8a2hex(text);\n        console.log('hex:' + hex + '/' + hex.length);\n        let idx = 0;\n        for (const char of hex) {\n            idx++;\n            const bits = ('0000' + parseInt(char, 16).toString(2)).slice(-4).split('');\n            const b1 = bits[0] * 1;\n            const b2 = bits[1] * 1;\n            const b3 = bits[2] * 1;\n            const b4 = bits[3] * 1;\n            const c1 = (b1 + b2 + b3) % 2;\n            const c2 = (b1 + b3 + b4) % 2;\n            const c3 = (b2 + b3 + b4) % 2;\n            const i = (b1 + b2 + b3 + b4 + c1 + c2 + c3) % 2;\n            const p = i * 1 ? 0 : 1;\n            const byte = '' + p + b1 + b2 + b3 + b4 + c1 + c2 + c3;\n            result.push(parseInt(byte, 2));\n        }\n        return result;\n    }\n    async encode(text, onComplete, onCompleteMute, hasMuteTimeOnEnd) {\n        this.init();\n        return await this.encodeExec(text, onComplete, onCompleteMute, hasMuteTimeOnEnd);\n    }\n    async encodeExec(\n        text,\n        onComplete = () => {},\n        onCompleteMute = () => {},\n        hasMuteTimeOnEnd = true\n    ) {\n        this.progress = 0;\n        const pause = this.pauseDuration;\n        const duration = this.activeDuration;\n        const timeBetweenChars = (pause + duration) * 1;\n        const hamings = this.convertTextToHaming(text);\n        const hamingsLen = hamings.length;\n        await this.encodeCharcode(255, duration * 2);\n        const start = Date.now();\n        let currentDuration = timeBetweenChars;\n        const dd = timeBetweenChars * 2;\n        const offset = start % timeBetweenChars;\n        const times = Math.floor(start / timeBetweenChars);\n        for (let i = 0; i < hamingsLen; i++) {\n            const target = (times + i) * timeBetweenChars + offset;\n            if (pause) {\n                await ProcessUtil.sleep(pause * 1);\n            }\n            await this.encodeCharcode(hamings[i], currentDuration);\n            this.progress = (i + 1) / hamingsLen;\n            this.onProgressExec();\n            const now = Date.now();\n            currentDuration = dd - (now - target);\n        }\n        onCompleteMute();\n        this.mute();\n        if (hasMuteTimeOnEnd) {\n            await ProcessUtil.sleep(timeBetweenChars * hamingsLen);\n        }\n\n        this.progress = 1;\n        onComplete();\n    }\n    onProgressExec() {\n        setTimeout(() => {\n            this.onProgress(this.progress);\n        });\n    }\n    getProgress() {\n        return this.progress;\n    }\n    end() {\n        this.progress = 0;\n    }\n}\nexport class Reciver {\n    static state = {\n        STOP: 'stop',\n        WAITING: 'waiting',\n        RECORDING: 'recording',\n        PARSING: 'parsing',\n        FAIL: 'fail',\n    };\n    constructor(\n        frequencies = BaseSetting.frequencies,\n        fftSize = 4096,\n        smoothingTimeConstant = 0.0,\n        minDecibels = -68,\n        alertMsg = 'click widow somewehere!.'\n    ) {\n        this.frequencies = frequencies;\n        // create audio nodes\n        this.fftSize = fftSize;\n        this.smoothingTimeConstant = smoothingTimeConstant;\n        this.minDecibels = minDecibels;\n        // buffer for analyser output\n        this.history = [];\n        this.inited = false;\n        this.alertMsg = alertMsg;\n        this.unsherpMaskGain = 1;\n        this.onStateChange = () => {};\n        window.addEventListener('click', (e) => {\n            this.init();\n        });\n    }\n    async init() {\n        if (this.inited) {\n            return;\n        }\n        this.inited = true;\n        // connect nodes\n        this.audioContext = BaseSetting.getAudioContext();\n        const analyser = this.audioContext.createAnalyser();\n        analyser.fftSize = this.fftSize;\n        analyser.smoothingTimeConstant = this.smoothingTimeConstant;\n        analyser.minDecibels = this.minDecibels;\n        this.analyser = analyser;\n        try {\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n            const microphone = this.audioContext.createMediaStreamSource(stream);\n            console.log(this.analyser);\n            microphone.connect(this.analyser);\n            this.decode();\n        } catch (err) {\n            alert('Microphone is required.');\n        }\n        this.outputType = 'text';\n        this.isStop = true;\n    }\n    setBinVlueThreshold(threshold) {\n        this.binVlueThreshold = threshold * 1;\n    }\n    setSpanDuration(spanDuration) {\n        this.spanDuration = spanDuration * 1;\n    }\n    setUnsherpMaskGain(unsherpMaskGain) {\n        this.unsherpMaskGain = unsherpMaskGain * 1;\n    }\n    setOutputType(outputType = 'text') {\n        this.outputType = outputType;\n    }\n    output(chars) {\n        // console.log(chars);\n        if (!chars) {\n            this.onOutput('');\n            return;\n        }\n        const hex = chars.join('');\n        if (!hex) {\n            this.onOutput('');\n            return;\n        }\n        // console.log('output hex');\n        const text = this.outputType === 'text' ? B64Util.hex2s(hex) : B64Util.hex2u8a(hex);\n        this.onOutput(text);\n    }\n    stop() {\n        this.isStop = true;\n        this.onStateChange(Reciver.state.STOP);\n    }\n    start() {\n        this.init();\n        if (this.isStop) {\n            this.isStop = false;\n            setTimeout(() => {\n                console.log('start decoder');\n                this.decode();\n            }, 1000);\n        }\n    }\n    calcTargetIndexes() {\n        const targetIndexes = [];\n        const hzPerBin = this.audioContext.sampleRate / (2 * this.analyser.frequencyBinCount);\n        for (const f of this.frequencies) {\n            const index = Math.floor((f + hzPerBin / 2) / hzPerBin);\n            targetIndexes.push(index);\n        }\n        return targetIndexes;\n    }\n    valitadeHaming(charCode) {\n        const bits = ('00000000' + charCode.toString(2)).slice(-8).split('');\n        const i = bits[0];\n        const b1 = bits[1] * 1;\n        const b2 = bits[2] * 1;\n        const b3 = bits[3] * 1;\n        const b4 = bits[4] * 1;\n        const c1 = bits[5] * 1;\n        const c2 = bits[6] * 1;\n        const c3 = bits[7] * 1;\n        const s1 = (b1 + b2 + b3 + c1) % 2;\n        const s2 = (b1 + b3 + b4 + c2) % 2;\n        const s3 = (b2 + b3 + b4 + c3) % 2;\n        const p = (b1 + b2 + b3 + b4 + c1 + c2 + c3) % 2;\n        let hex = '';\n        let bit = '';\n        let isFailed = false;\n        const codn = s1 * 1 + s2 * 2 + s3 * 4;\n        const isValid = p * 1 === (i * 1 ? 0 : 1);\n        const codnSuccess = codn * 1 === 0;\n        if (codnSuccess && isValid) {\n            bit = '' + b1 + b2 + b3 + b4;\n            isFailed = 0;\n        } else if (!codnSuccess && !isValid) {\n            if (codn === 3) {\n                const a = b1 ? 0 : 1;\n                bit = '' + a + b2 + b3 + b4;\n            } else if (codn === 5) {\n                const a = b2 ? 0 : 1;\n                bit = '' + b1 + a + b3 + b4;\n            } else if (codn === 7) {\n                const a = b3 ? 0 : 1;\n                bit = '' + b1 + b2 + a + b4;\n            } else if (codn === 6) {\n                const a = b4 ? 0 : 1;\n                bit = '' + b1 + b2 + b3 + a;\n            } else {\n                bit = '' + b1 + b2 + b3 + b4;\n            }\n            isFailed = 0;\n        } else {\n            isFailed = 1;\n            bit = '' + b1 + b2 + b3 + b4;\n        }\n        hex = parseInt(bit, 2).toString(16);\n        return { i, hex, isFailed, bit, p, codn };\n    }\n    parse(bufferedData, indexCount, targetIndexCount, unsherpMaskGain = 1) {\n        return new Promise((resolve) => {\n            console.log('parse A');\n            console.time('parse');\n\n            const result = this.parseExec(\n                bufferedData,\n                indexCount,\n                targetIndexCount,\n                unsherpMaskGain\n            );\n            console.timeEnd('parse');\n            resolve(result);\n        });\n    }\n    parsecharContinuous(part, thresholds, targetIndexCount) {\n        const charContinuous = [];\n        let lastChar = null;\n        const bytes = [];\n        for (const calced of part) {\n            const data = calced.data;\n            // const time = calced.time;\n            // const byte = this.readByte(data, thresholds, targetIndexCount);\n\n            bytes.push(data);\n        }\n        const byte = new Array(targetIndexCount);\n        byte.fill(0);\n        const len = bytes.length;\n        let count = 0;\n        const lenHalf = len / 2;\n        for (const data of bytes) {\n            for (let i = 0; i < targetIndexCount; i++) {\n                const threshold = thresholds[i];\n                const bitData = data[i].lastValue;\n                if (threshold < bitData) {\n                    byte[i] += lenHalf - Math.abs(lenHalf - count) + len;\n                }\n            }\n            count++;\n        }\n        let uint8 = 0;\n        const base = len * (len + lenHalf);\n        const p = [];\n        const q = [];\n        for (let i = 0; i < targetIndexCount; i++) {\n            const avg = byte[i] / base;\n            p.push(Math.floor(avg * 100) / 100);\n            if (avg > 0.4) {\n                uint8 += (1 << i) * 1;\n                q.push(1);\n            } else {\n                q.push(0);\n            }\n        }\n        const hamingResult = this.valitadeHaming(uint8);\n        const char = hamingResult.hex;\n        console.log('char:' + char + '/' + uint8 + '/' + base + '/byte:' + q + '/' + p);\n        for (const calced of part) {\n            calced.hamingResult = hamingResult;\n            calced.byte = uint8;\n            const state = calced.state;\n            const lastState = calced.lastState;\n            const isReadable = state > 0 || lastState > 0;\n            if (!isReadable) {\n                continue;\n            }\n            if (char === lastChar) {\n                charContinuous.push(hamingResult);\n            } else {\n                for (const hamingResult of charContinuous) {\n                    if (!hamingResult.isFailed) {\n                        for (const hamingResult of charContinuous) {\n                            hamingResult.isFailed = 0;\n                        }\n                        break;\n                    }\n                }\n                charContinuous.splice(0, charContinuous.length);\n            }\n            lastChar = char;\n        }\n    }\n    parsecharContinuous1(part, thresholds, targetIndexCount) {\n        const charContinuous = [];\n        let lastChar = null;\n        let startUnixTime = Date.now();\n        let endUnixTime = 0;\n        let min = 255;\n        for (const threshold of thresholds) {\n            if (min > threshold) {\n                min = threshold;\n            }\n        }\n        for (const calced of part) {\n            const data = calced.data;\n            const time = calced.time;\n            const byte = this.readByte(data, thresholds, targetIndexCount, min);\n            const hamingResult = this.valitadeHaming(byte);\n            const char = hamingResult.hex;\n            calced.hamingResult = hamingResult;\n            calced.byte = byte;\n            const state = calced.state;\n            const lastState = calced.lastState;\n            const isReadable = state > 0 || lastState > 0;\n            if (!isReadable) {\n                continue;\n            }\n            if (!hamingResult.isFailed) {\n                startUnixTime = time > startUnixTime ? startUnixTime : time;\n                endUnixTime = time > endUnixTime ? time : endUnixTime;\n            }\n            if (char === lastChar) {\n                charContinuous.push(hamingResult);\n            } else {\n                for (const hamingResult of charContinuous) {\n                    if (!hamingResult.isFailed) {\n                        for (const hamingResult of charContinuous) {\n                            hamingResult.isFailed = 0;\n                        }\n                        break;\n                    }\n                }\n                charContinuous.splice(0, charContinuous.length);\n            }\n            lastChar = char;\n        }\n    }\n    pursePerPart(part, parsed, lastChar, spanDuration, spanOffset, thresholds, targetIndexCount) {\n        // let changeCount = 0;\n        const cache = {};\n        const cacheNulls = {};\n        let nullsCount = 0;\n        const nextPeakTime = part.nextPeakTime;\n        // this.parsecharContinuous(part, thresholds, targetIndexCount);\n        for (const calced of part) {\n            const state = calced.state;\n            const lastState = calced.lastState;\n            const time = calced.time;\n            const diff = nextPeakTime - time - spanOffset;\n            const hamingResult = calced.hamingResult;\n            const char = hamingResult.hex;\n            const isReadable = state > 0 || lastState > 0;\n            const weight = spanDuration + 20 * (isReadable ? 2 : 1) - Math.abs(diff);\n            const firstChangeChar = char !== lastChar ? char : null;\n            const currentWeight =\n                char !== lastChar ? (firstChangeChar === char ? weight * 2 : weight * 1) : weight;\n            if (!hamingResult.isFailed) {\n                cache[char] = cache[char] ? cache[char] + currentWeight : currentWeight;\n            } else {\n                cacheNulls[char] = cacheNulls[char]\n                    ? cacheNulls[char] + currentWeight\n                    : currentWeight;\n            }\n        }\n        // console.log(cache);\n        const targetChar = this.getMaxCountKey(cache);\n        const targetCharNulls = this.getMaxCountKey(cacheNulls);\n        // console.log(\n        //     'targetChar:' +\n        //         targetChar +\n        //         '/targetCharNulls:' +\n        //         targetCharNulls +\n        //         '/weight:' +\n        //         weight +\n        //         '/spanDuration:' +\n        //         spanDuration +\n        //         '/diff:' +\n        //         diff +\n        //         '/spanOffset:' +\n        //         spanOffset +\n        //         '/time:' +\n        //         time +\n        //         '/nextPeakTime:' +\n        //         nextPeakTime\n        // );\n        if (targetChar !== null) {\n            // changeCount += lastChar !== targetChar ? 1 : 0;\n            // const startTime = firstTime + offset;\n            // this.parsecharContinuous1(part, thresholds, targetIndexCount);\n            parsed.push(targetChar);\n            lastChar = targetChar;\n        } else if (targetCharNulls !== null) {\n            // console.log(cache);\n            // console.log(cacheNulls);\n            // nullsCount++;\n            // changeCount += lastChar !== targetCharNulls ? 1 : 0;\n            parsed.push(targetCharNulls);\n            lastChar = targetCharNulls;\n        } else {\n            // console.log(cache);\n            // console.log(cacheNulls);\n            nullsCount++;\n        }\n        this.clearMap(cache);\n        this.clearMap(cacheNulls);\n        part.lastChar = lastChar;\n        part.nullsCount = nullsCount;\n        return { lastChar, nullsCount };\n    }\n    parseParUnitTime(\n        peakList,\n        k,\n        spanDuration,\n        targetCharCount,\n        startTimeInput,\n        thresholds,\n        targetIndexCount\n    ) {\n        const parsed = [];\n        let parseCounter = 1;\n        let changeCount = 0;\n        let nullsCount = 0;\n        const k2 = k + 1;\n        const spanOffset = Math.ceil(spanDuration / 2) + Math.floor((spanDuration * k2) / 10);\n        const startTime = startTimeInput - Math.ceil(spanDuration / 2);\n        console.log(\n            'parseParUnitTime k:' +\n                k +\n                '/spanDuration:' +\n                spanDuration +\n                '/spanOffset:' +\n                spanOffset\n        );\n        const parts = {};\n        for (const calced of peakList) {\n            const part = parts[parseCounter] ? parts[parseCounter] : [];\n            parts[parseCounter] = part;\n            part.push(calced);\n            const nextPeakTime = startTime + spanDuration * parseCounter + spanOffset;\n            part.nextPeakTime = nextPeakTime;\n            const time = calced.time;\n            if (nextPeakTime <= time) {\n                parseCounter++;\n            }\n        }\n        console.log(parts);\n        let lastChar = null;\n        for (const parseCounter in parts) {\n            const part = parts[parseCounter];\n            const result = this.pursePerPart(\n                part,\n                parsed,\n                lastChar,\n                spanDuration,\n                spanOffset,\n                thresholds,\n                targetIndexCount\n            );\n            changeCount += lastChar === result.lastChar ? 0 : 1;\n            lastChar = result.lastChar;\n            nullsCount += result.nullsCount;\n        }\n        const isOdd = targetCharCount % 2;\n        console.log(\n            'parseParUnitTime parsed targetCharCount:' +\n                targetCharCount +\n                '/nullsCount:' +\n                nullsCount +\n                '/changeCount:' +\n                changeCount +\n                '/parsed.length:' +\n                parsed.length\n        );\n        // if (\n        //     targetCharCount === parsed.length - nullsCount - 4 + isOdd ||\n        //     targetCharCount === parsed.length - nullsCount - 3 + isOdd ||\n        //     targetCharCount === parsed.length - nullsCount - 2 + isOdd ||\n        //     targetCharCount === parsed.length - nullsCount - 1 + isOdd ||\n        //     targetCharCount === parsed.length - nullsCount + 0 + isOdd ||\n        //     targetCharCount === parsed.length - nullsCount + 1 + isOdd\n        // ) {\n        console.log(parsed?.join(''));\n        return {\n            parsedCounts: changeCount - (nullsCount * targetCharCount) / 20,\n            parsed: parsed.slice(0, targetCharCount),\n        };\n        // }\n        // return null;\n    }\n    preDecode(peakList, thresholds, targetIndexCount) {\n        const charContinuous = [];\n        let lastChar = null;\n        let startUnixTime = Date.now();\n        let endUnixTime = 0;\n        console.log('parseExec D');\n        for (const calced of peakList) {\n            const data = calced.data;\n            const time = calced.time;\n            const byte = this.readByte(data, thresholds, targetIndexCount);\n            const hamingResult = this.valitadeHaming(byte);\n            const char = hamingResult.hex;\n            calced.hamingResult = hamingResult;\n            calced.byte = byte;\n            const state = calced.state;\n            const lastState = calced.lastState;\n            const isReadable = state > 0 || lastState > 0;\n            if (!isReadable) {\n                continue;\n            }\n            if (!hamingResult.isFailed) {\n                startUnixTime = time > startUnixTime ? startUnixTime : time;\n                endUnixTime = time > endUnixTime ? time : endUnixTime;\n            }\n            if (char === lastChar) {\n                charContinuous.push(hamingResult);\n            } else {\n                let isSuccess = false;\n                for (const hamingResult of charContinuous) {\n                    if (!hamingResult.isFailed) {\n                        isSuccess = true;\n                        break;\n                    }\n                }\n                if (isSuccess) {\n                    for (const hamingResult of charContinuous) {\n                        hamingResult.isFailed = 0;\n                    }\n                }\n                charContinuous.splice(0, charContinuous.length);\n            }\n            lastChar = char;\n        }\n        return { startUnixTime, endUnixTime };\n    }\n    unsharpFilter(list, indexCount, k = 1) {\n        const len = list.length;\n        const width = indexCount * subCount;\n        for (let i = 0; i < len; i++) {\n            const row = list[i];\n            for (let j = 0; j < width; j++) {\n                const kernel = this.getFilterKernel(j, i);\n                let amount = 0;\n                for (const d of kernel) {\n                    if (d.x < 0 || d.y < 0 || d.x >= width || d.y >= len) {\n                        continue;\n                    }\n                    const v = list[d.y][d.x];\n                    amount += (v * d.e) / 9;\n                }\n                row[j] += amount * k;\n            }\n        }\n    }\n    getFilterKernel(x, y) {\n        return [\n            { x: x - 1, y: y - 1, e: -1 },\n            { x: x - 0, y: y - 1, e: -1 },\n            { x: x + 1, y: y - 1, e: -1 },\n            { x: x - 1, y: y - 0, e: -1 },\n            { x: x - 0, y: y - 0, e: 8 },\n            { x: x + 1, y: y - 0, e: -1 },\n            { x: x - 1, y: y + 1, e: -1 },\n            { x: x - 0, y: y + 1, e: -1 },\n            { x: x + 1, y: y + 1, e: -1 },\n        ];\n    }\n    buildPeakList(bufferedData, targetIndexCount, unsherpMaskGain) {\n        const peakList = [];\n        const maxes = new Uint8Array(targetIndexCount);\n        maxes.fill(0);\n        const mins = new Uint8Array(targetIndexCount);\n        mins.fill(255);\n        const dBuffers = new Array(targetIndexCount);\n        dBuffers.fill(0);\n        const lastBuffers = new Array(targetIndexCount);\n        lastBuffers.fill(0);\n        const lastDBuffers = new Array(targetIndexCount);\n        lastDBuffers.fill(0);\n        let lastState = 0;\n        const image = [];\n        // console.log('parseExec A');\n        for (const row of bufferedData) {\n            const map = row.pop();\n            const state = row.pop();\n            const time = row.pop();\n            image.push(map);\n            const calced = { state, time, data: null, lastState };\n            peakList.push(calced);\n            lastState = state;\n        }\n\n        this.unsharpFilter(image, targetIndexCount, unsherpMaskGain);\n        let rowIndex = 0;\n        for (const row of image) {\n            const data = [];\n            for (let i = 0; i < targetIndexCount; i++) {\n                const index = i; //Math.floor(i / 5);\n                const offseted = index * subCount + harf + 1;\n                const target = row[offseted];\n                const max = maxes[index];\n                const lastValue = lastBuffers[index];\n                const dValue = target - lastValue;\n                const lastDValue = lastDBuffers[index];\n                const pValue = dValue * (lastDValue === 0 ? 1 : lastDValue);\n                lastDBuffers[index] = dBuffers[index];\n                dBuffers[index] = dValue;\n                lastBuffers[index] = target;\n                maxes[index] = target > max ? target : max;\n                const min = mins[index];\n                mins[index] = min > target ? target : min;\n                data.push({ target, pValue, lastValue });\n            }\n            peakList[rowIndex].data = data;\n            // console.log('parseExec A data.length:' + data.length + '/indexCount:' + indexCount);\n            rowIndex++;\n        }\n        return { peakList, maxes };\n    }\n    parseExec(bufferedData, indexCount, targetIndexCount, unsherpMaskGain) {\n        console.log(\n            'parse bufferedData.length:' +\n                bufferedData.length +\n                '/indexCount:' +\n                indexCount +\n                '/targetIndexCount:' +\n                targetIndexCount\n        );\n        const { peakList, maxes } = this.buildPeakList(\n            bufferedData,\n            targetIndexCount,\n            unsherpMaskGain\n        );\n        if (bufferedData.length < 1 || peakList.length < 1) {\n            return false;\n        }\n        console.log('parseExec B');\n        const thresholds = [];\n        for (let i = 0; i < targetIndexCount; i++) {\n            const max = maxes[i];\n            const threshold = max * 0.9;\n            thresholds.push(threshold);\n        }\n        // console.log(maxes);\n        // console.log(thresholds);\n        // console.log('parseExec C');\n        const spanDuration = this.spanDuration * 1;\n        const offset = Math.ceil(spanDuration * 1.1);\n        const firstTime = peakList[0].time;\n        // console.log(\n        //     'offset:' + offset + '/spanDuration:' + spanDuration\n        //     //+ '/firstPeakTime:' + firstPeakTime\n        // );\n        const startTime = firstTime + offset;\n        const { endUnixTime, startUnixTime } = this.preDecode(\n            peakList,\n            thresholds,\n            targetIndexCount\n        );\n        // console.log('parseExec E');\n        const targetCharCount = Math.floor((endUnixTime - startUnixTime) / spanDuration);\n        const isOdd = targetCharCount % 2;\n        console.log(peakList);\n        const parsedCounts = {};\n        const parsedMax = {};\n        for (let k = 0; k < 5; k++) {\n            const result = this.parseParUnitTime(\n                peakList,\n                k,\n                spanDuration,\n                targetCharCount,\n                startTime,\n                thresholds,\n                targetIndexCount\n            );\n            if (result) {\n                parsedCounts[k + '_'] = result.parsedCounts;\n                parsedMax[k + '_'] = result.parsed;\n            }\n        }\n        // console.log('parseExec F');\n        const maxK = this.getMaxCountKey(parsedCounts);\n        console.log(parsedCounts);\n        const parsed = parsedMax[maxK];\n        console.log(parsed ? parsed.join('') : null);\n        try {\n            this.output(parsed);\n        } catch (e) {\n            console.error(e);\n            return null;\n        }\n        return parsed;\n    }\n    getMaxCountKey(countMap) {\n        let maxValue = 0;\n        let maxKey = null;\n        for (const [key, value] of Object.entries(countMap)) {\n            if (maxValue < value) {\n                maxValue = value;\n                maxKey = key;\n            }\n        }\n        return maxKey;\n    }\n    clearMap(obj) {\n        const keys = Object.keys(obj);\n        for (const key of keys) {\n            delete obj[key];\n        }\n    }\n    readByte(data, thresholds, targetIndexCount, min = 254) {\n        // const count = 255 - min;\n        // for (let j = 0; j < count; j++) {\n        //     let byte = 0;\n        //     for (let i = 0; i < targetIndexCount; i++) {\n        //         const threshold = thresholds[i];\n        //         const bitData = data[i].lastValue;\n        //         // console.log('threshold:' + threshold + '/bitData:' + bitData);\n        //         if (threshold + j <= bitData || bitData === 255) {\n        //             byte += (1 << i) * 1;\n        //         }\n        //     }\n        //     const hamingResult = this.valitadeHaming(byte);\n        //     if (!hamingResult.isFailed) {\n        //         return byte;\n        //     }\n        // }\n        let byte = 0;\n        for (let i = 0; i < targetIndexCount; i++) {\n            const threshold = thresholds[i];\n            const bitData = data[i].lastValue;\n            // console.log('threshold:' + threshold + '/bitData:' + bitData);\n            if (threshold <= bitData) {\n                byte += (1 << i) * 1;\n            }\n        }\n        return byte;\n    }\n    async decode() {\n        this.init();\n        this.onStateChange(Reciver.state.WAITING);\n        const buffer = new Uint8Array(this.analyser.frequencyBinCount);\n        this.isStop = false;\n        const thesholdMs = 15;\n        const thesholdMsEnd = thesholdMs * 10;\n        const now = Date.now();\n        const futurOffset = 1000 * 60 * 60 * 24;\n        const state = {\n            now: now,\n            lastOn: now + futurOffset,\n            lastEnd: 0,\n            isRecording: false,\n        };\n        const targetIndexes = this.calcTargetIndexes();\n        const indexCount = targetIndexes.length * 5;\n        const targetIndexCount = this.frequencies.length;\n        const bufferedData = [];\n        console.log('decode');\n        while (true) {\n            const binVlueThreshold = this.binVlueThreshold;\n            const unsherpMaskGain = this.unsherpMaskGain;\n            const start = Date.now();\n            this.analyser.getByteFrequencyData(buffer);\n            const selected = [];\n            const selectedMap = [];\n            let max = 0;\n            let min = 255;\n            for (const index of targetIndexes) {\n                for (let i = 0; i < subCount; i++) {\n                    const offset = i - harf;\n                    selectedMap.push(buffer[index + offset]);\n                }\n                const target = buffer[index];\n                max = target > max ? target : max;\n                min = target > min ? min : target;\n                selected.push(target);\n            }\n            selected.push(start);\n            const selectedSate =\n                max >= binVlueThreshold && min >= binVlueThreshold / 2\n                    ? 255\n                    : max < binVlueThreshold && min < binVlueThreshold / 2\n                    ? 0\n                    : 128;\n            selected.push(selectedSate);\n            selected.push(selectedMap);\n            // console.log(buffer);\n            // console.log('state.isRecording:' + state.isRecording);\n            // console.log('state.isRecording:' + state.isRecording + '/selectedSate:' + selectedSate);\n            if (state.isRecording) {\n                state.lastEnd = selectedSate ? start : state.lastEnd;\n                if (start - state.lastEnd > thesholdMsEnd) {\n                    this.onStateChange(Reciver.state.PARSING);\n                    const result = await this.parse(\n                        bufferedData,\n                        indexCount,\n                        targetIndexCount,\n                        unsherpMaskGain\n                    );\n                    // console.log('result:' + result);\n                    if (result) {\n                        state.isRecording = false;\n                        this.onStateChange(Reciver.state.WAITING);\n                    } else {\n                        this.onStateChange(Reciver.state.FAIL);\n                        setTimeout(() => {\n                            state.isRecording = false;\n                            this.onStateChange(Reciver.state.WAITING);\n                        }, 3000);\n                    }\n                    bufferedData.splice(0, bufferedData.length);\n                    // console.log(bufferedData);\n                    await ProcessUtil.sleep(100);\n                } else {\n                    bufferedData.push(selected);\n                }\n            } else {\n                state.lastOn =\n                    selectedSate === 255\n                        ? state.lastOn > start\n                            ? start\n                            : state.lastOn\n                        : start + futurOffset;\n                if (start - state.lastOn >= thesholdMs) {\n                    this.onStateChange(Reciver.state.RECORDING);\n                    state.isRecording = true;\n                    state.lastOn = start + futurOffset;\n                }\n            }\n            await ProcessUtil.sleep(0);\n            if (this.isStop) {\n                console.log('stop decoder');\n                break;\n            }\n        }\n    }\n}\n","/*\n * Copyright 2007 ZXing authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// package com.google.zxing.common.reedsolomon;\n\n/**\n * <p>This class contains utility methods for performing mathematical operations over\n * the Galois Fields. Operations use a given primitive polynomial in calculations.</p>\n *\n * <p>Throughout this package, elements of the GF are represented as an {@code int}\n * for convenience and speed (but at the cost of memory).\n * </p>\n *\n * @author Sean Owen\n * @author David Olivier\n */\nclass GenericGF {\n\t/**\n\t * Create a representation of GF(size) using the given primitive polynomial.\n\t *\n\t * @param primitive irreducible polynomial whose coefficients are represented by\n\t *  the bits of an int, where the least-significant bit represents the constant\n\t *  coefficient\n\t * @param size the size of the field\n\t * @param b the factor b in the generator polynomial can be 0- or 1-based\n\t *  (g(x) = (x+a^b)(x+a^(b+1))...(x+a^(b+2t-1))).\n\t *  In most cases it should be 1, but for QR code it is 0.\n\t */\n\tconstructor(primitive, size, b) {\n\t\tthis.primitive = primitive;\n\t\tthis.size = size;\n\t\tthis.generatorBase = b;\n\n\t\tthis.expTable = new Int32Array(size);\n\t\tthis.logTable = new Int32Array(size);\n\t\tlet x = 1;\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tthis.expTable[i] = x;\n\t\t\tx *= 2; // we're assuming the generator alpha is 2\n\t\t\tif (x >= size) {\n\t\t\t\tx ^= primitive;\n\t\t\t\tx &= size - 1;\n\t\t\t}\n\t\t}\n\t\tfor (let i = 0; i < size - 1; i++) {\n\t\t\tthis.logTable[this.expTable[i]] = i;\n\t\t}\n\t\t// logTable[0] == 0 but this should never be used\n\t\tthis.zero = new GenericGFPoly(this, new Int32Array([0]));\n\t\tthis.one = new GenericGFPoly(this, new Int32Array([1]));\n\t}\n\n\tgetZero() {\n\t\treturn this.zero;\n\t}\n\n\tgetOne() {\n\t\treturn this.one;\n\t}\n\n\t/**\n\t * @return the monomial representing coefficient * x^degree\n\t */\n\tbuildMonomial(degree, coefficient) {\n\t\tif (degree < 0) {\n\t\t\tthrow new ReedSolomonException();\n\t\t}\n\t\tif (coefficient === 0) {\n\t\t\treturn this.zero;\n\t\t}\n\t\tconst coefficients = new Int32Array(degree + 1);\n\t\tcoefficients[0] = coefficient;\n\t\treturn new GenericGFPoly(this, coefficients);\n\t}\n\n\t/**\n\t * Implements both addition and subtraction -- they are the same in GF(size).\n\t *\n\t * @return sum/difference of a and b\n\t */\n\tstatic addOrSubtract(a, b) {\n\t\treturn a ^ b;\n\t}\n\n\t/**\n\t * @return 2 to the power of a in GF(size)\n\t */\n\texp(a) {\n\t\treturn this.expTable[a];\n\t}\n\n\t/**\n\t * @return base 2 log of a in GF(size)\n\t */\n\tlog(a) {\n\t\tif (a === 0) {\n\t\t\tthrow new ReedSolomonException();\n\t\t}\n\t\t// console.log(this.logTable);\n\t\treturn this.logTable[a];\n\t}\n\n\t/**\n\t * @return multiplicative inverse of a\n\t */\n\tinverse(a) {\n\t\tif (a === 0) {\n\t\t\tthrow new ReedSolomonException();\n\t\t}\n\t\treturn this.expTable[this.size - this.logTable[a] - 1];\n\t}\n\n\t/**\n\t * @return product of a and b in GF(size)\n\t */\n\tmultiply(a, b) {\n\t\tif (a === 0 || b === 0) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn this.expTable[(this.logTable[a] + this.logTable[b]) % (this.size - 1)];\n\t}\n\n\tgetSize() {\n\t\treturn this.size;\n\t}\n\n\tgetGeneratorBase() {\n\t\treturn this.generatorBase;\n\t}\n\n\ttoString() {\n\t\treturn 'GF(0x' + this.primitive.toString(16) + ',' + this.size + ')';\n\t}\n}\n\n/**\n * <p>Represents a polynomial whose coefficients are elements of a GF.\n * Instances of this class are immutable.</p>\n *\n * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\n * port of his C++ Reed-Solomon implementation.</p>\n *\n * @author Sean Owen\n */\nclass GenericGFPoly {\n\t/**\n\t * @param field the {@link GenericGF} instance representing the field to use\n\t * to perform computations\n\t * @param coefficients coefficients as ints representing elements of GF(size), arranged\n\t * from most significant (highest-power term) coefficient to least significant\n\t * @throws IllegalArgumentException if argument is null or empty,\n\t * or if leading coefficient is 0 and this is not a\n\t * constant polynomial (that is, it is not the monomial \"0\")\n\t */\n\tconstructor(field, coefficients) {\n\t\tif (coefficients.length === 0 || !field) {\n\t\t\tthrow new ReedSolomonException();\n\t\t}\n\t\tthis.field = field;\n\t\tconst coefficientsLength = coefficients.length;\n\t\tif (coefficientsLength > 1 && coefficients[0] === 0) {\n\t\t\t// Leading term must be non-zero for anything except the constant polynomial \"0\"\n\t\t\tlet firstNonZero = 1;\n\t\t\twhile (firstNonZero < coefficientsLength && coefficients[firstNonZero] === 0) {\n\t\t\t\tfirstNonZero++;\n\t\t\t}\n\t\t\tif (firstNonZero === coefficientsLength) {\n\t\t\t\tthis.coefficients = new Int32Array([0]);\n\t\t\t} else {\n\t\t\t\tconst len = coefficientsLength - firstNonZero;\n\t\t\t\tconst newCoefficients = new Int32Array(len);\n\t\t\t\tfor (let i = 0; i < len; i++) {\n\t\t\t\t\tnewCoefficients[i] = coefficients[i + firstNonZero];\n\t\t\t\t}\n\t\t\t\tnewCoefficients.set(coefficients.slice(firstNonZero), 0);\n\t\t\t\t// System.arraycopy(coefficients,\n\t\t\t\t//     firstNonZero,\n\t\t\t\t//     this.coefficients,\n\t\t\t\t//     0,\n\t\t\t\t//     this.coefficients.length);\n\t\t\t\tthis.coefficients = newCoefficients;\n\t\t\t}\n\t\t} else {\n\t\t\tthis.coefficients = coefficients;\n\t\t}\n\t}\n\n\tgetCoefficients() {\n\t\treturn this.coefficients;\n\t}\n\n\t/**\n\t * @return degree of this polynomial\n\t */\n\tgetDegree() {\n\t\treturn this.coefficients.length - 1;\n\t}\n\n\t/**\n\t * @return true iff this polynomial is the monomial \"0\"\n\t */\n\tisZero() {\n\t\treturn this.coefficients[0] === 0;\n\t}\n\n\t/**\n\t * @return coefficient of x^degree term in this polynomial\n\t */\n\tgetCoefficient(degree) {\n\t\t// console.log('getCoefficient this.coefficients degree:' + degree);\n\t\t// console.log(this.coefficients);\n\t\treturn this.coefficients[this.coefficients.length - 1 - degree];\n\t}\n\n\t/**\n\t * @return evaluation of this polynomial at a given point\n\t */\n\tevaluateAt(a) {\n\t\tconst field = this.field;\n\t\tif (a === 0) {\n\t\t\t// Just return the x^0 coefficient\n\t\t\treturn this.getCoefficient(0);\n\t\t}\n\t\tif (a === 1) {\n\t\t\t// Just the sum of the coefficients\n\t\t\tlet result = 0;\n\t\t\tfor (const coefficient of this.coefficients) {\n\t\t\t\tresult = GenericGF.addOrSubtract(result, coefficient);\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t\tlet result = this.coefficients[0];\n\t\tfor (const coefficient of this.coefficients) {\n\t\t\tresult = GenericGF.addOrSubtract(field.multiply(a, result), coefficient);\n\t\t}\n\t\treturn result;\n\t}\n\n\taddOrSubtract(other) {\n\t\tconst field = this.field;\n\t\tif (field !== other.field) {\n\t\t\tthrow new ReedSolomonException('GenericGFPolys do not have same GenericGF field');\n\t\t}\n\t\tif (this.isZero()) {\n\t\t\treturn other;\n\t\t}\n\t\tif (other.isZero()) {\n\t\t\treturn this;\n\t\t}\n\t\tconst isSmallLonger = this.coefficients.length > other.coefficients.length;\n\t\t// const coefficients = this.coefficients;\n\t\tconst smallerCoefficients = isSmallLonger ? other.coefficients : this.coefficients;\n\t\tconst largerCoefficients = isSmallLonger ? this.coefficients : other.coefficients;\n\t\t// if (smallerCoefficients.length > largerCoefficients.length) {\n\t\t// \tconst temp = smallerCoefficients;\n\t\t// \tsmallerCoefficients = largerCoefficients;\n\t\t// \tlargerCoefficients = temp;\n\t\t// }\n\t\tconst lenLarge = largerCoefficients.length;\n\t\tconst sumDiff = new Int32Array(lenLarge);\n\t\tconst lengthDiff = lenLarge - smallerCoefficients.length;\n\t\t// Copy high-order terms only found in higher-degree polynomial's coefficients\n\t\tsumDiff.set(largerCoefficients.slice(0, lengthDiff), 0);\n\t\t// System.arraycopy(largerCoefficients, 0, sumDiff, 0, lengthDiff);\n\t\t// console.log('lengthDiff:' + lengthDiff + '/sumDiff:' + JSON.stringify(sumDiff));\n\t\tfor (let i = lengthDiff; i < lenLarge; i++) {\n\t\t\tsumDiff[i] = GenericGF.addOrSubtract(smallerCoefficients[i - lengthDiff], largerCoefficients[i]);\n\t\t}\n\t\t// console.log(sumDiff);\n\t\treturn new GenericGFPoly(field, sumDiff);\n\t}\n\n\tmultiply(param) {\n\t\treturn typeof param === 'number' ? this.multiplyScalar(param) : this.multiplyGF(param);\n\t}\n\tmultiplyGF(other) {\n\t\tconst field = this.field;\n\t\tconst aCoefficients = this.coefficients;\n\t\tif (field !== other.field) {\n\t\t\tthrow new ReedSolomonException('GenericGFPolys do not have same GenericGF field');\n\t\t}\n\t\tif (this.isZero() || other.isZero()) {\n\t\t\treturn field.getZero();\n\t\t}\n\t\t// const aCoefficients = coefficients;largerCoefficients\n\t\tconst aLength = aCoefficients.length;\n\t\tconst bCoefficients = other.coefficients;\n\t\tconst bLength = bCoefficients.length;\n\t\tconst product = new Int32Array(aLength + bLength - 1);\n\t\tfor (let i = 0; i < aLength; i++) {\n\t\t\tconst aCoeff = aCoefficients[i];\n\t\t\tfor (let j = 0; j < bLength; j++) {\n\t\t\t\tproduct[i + j] = GenericGF.addOrSubtract(product[i + j], field.multiply(aCoeff, bCoefficients[j]));\n\t\t\t}\n\t\t}\n\t\treturn new GenericGFPoly(field, product);\n\t}\n\n\tmultiplyScalar(scalar) {\n\t\tconst field = this.field;\n\t\tconst coefficients = this.coefficients;\n\t\tif (scalar === 0) {\n\t\t\treturn field.getZero();\n\t\t}\n\t\tif (scalar === 1) {\n\t\t\treturn this;\n\t\t}\n\t\tconst size = coefficients.length;\n\t\tconst product = new Int32Array(size);\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tproduct[i] = field.multiply(coefficients[i], scalar);\n\t\t}\n\t\treturn new GenericGFPoly(field, product);\n\t}\n\n\tmultiplyByMonomial(degree, coefficient) {\n\t\tconst field = this.field;\n\t\tconst coefficients = this.coefficients;\n\t\tif (degree < 0) {\n\t\t\tthrow new ReedSolomonException();\n\t\t}\n\t\tif (coefficient === 0) {\n\t\t\treturn this, field.getZero();\n\t\t}\n\t\tconst size = coefficients.length;\n\t\tconst product = new Int32Array(size + degree);\n\t\tfor (let i = 0; i < size; i++) {\n\t\t\tproduct[i] = field.multiply(coefficients[i], coefficient);\n\t\t}\n\t\treturn new GenericGFPoly(field, product);\n\t}\n\n\tdivide(other) {\n\t\tconst field = this.field;\n\t\tif (field !== other.field) {\n\t\t\tthrow new ReedSolomonException('GenericGFPolys do not have same GenericGF field');\n\t\t}\n\t\tif (other.isZero()) {\n\t\t\tthrow new ReedSolomonException('Divide by 0');\n\t\t}\n\t\tlet quotient = field.getZero();\n\t\tlet remainder = this;\n\t\tconst denominatorLeadingTerm = other.getCoefficient(other.getDegree());\n\t\tconst inverseDenominatorLeadingTerm = field.inverse(denominatorLeadingTerm);\n\t\twhile (remainder.getDegree() >= other.getDegree() && !remainder.isZero()) {\n\t\t\tconst degreeDifference = remainder.getDegree() - other.getDegree();\n\t\t\tconst scale = field.multiply(remainder.getCoefficient(remainder.getDegree()), inverseDenominatorLeadingTerm);\n\t\t\tconst term = other.multiplyByMonomial(degreeDifference, scale);\n\t\t\tconst iterationQuotient = field.buildMonomial(degreeDifference, scale);\n\t\t\tquotient = quotient.addOrSubtract(iterationQuotient);\n\t\t\tremainder = remainder.addOrSubtract(term);\n\t\t}\n\t\treturn [quotient, remainder];\n\t}\n\n\ttoString() {\n\t\tconst field = this.field;\n\t\tconst coefficients = this.coefficients;\n\t\tif (this.isZero()) {\n\t\t\treturn '0';\n\t\t}\n\t\tconst result = []; //new StringBuilder(8 * getDegree());\n\t\tfor (let degree = this.getDegree(); degree >= 0; degree--) {\n\t\t\tconst coefficient = this.getCoefficient(degree);\n\t\t\tif (coefficient !== 0) {\n\t\t\t\tif (coefficient < 0) {\n\t\t\t\t\tif (degree === this.getDegree()) {\n\t\t\t\t\t\tresult.push('-');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push(' - ');\n\t\t\t\t\t}\n\t\t\t\t\tcoefficient = -coefficient;\n\t\t\t\t} else {\n\t\t\t\t\tif (result.length > 0) {\n\t\t\t\t\t\tresult.push(' + ');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (degree === 0 || coefficient !== 1) {\n\t\t\t\t\tconst alphaPower = field.log(coefficient);\n\t\t\t\t\tif (alphaPower === 0) {\n\t\t\t\t\t\tresult.push('1');\n\t\t\t\t\t} else if (alphaPower === 1) {\n\t\t\t\t\t\tresult.push('a');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('a^');\n\t\t\t\t\t\tresult.push(alphaPower);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (degree !== 0) {\n\t\t\t\t\tif (degree === 1) {\n\t\t\t\t\t\tresult.push('x');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('x^');\n\t\t\t\t\t\tresult.push(degree);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result.join('');\n\t}\n}\n\n/**\n * <p>Implements Reed-Solomon decoding, as the name implies.</p>\n *\n * <p>The algorithm will not be explained here, but the following references were helpful\n * in creating this implementation:</p>\n *\n * <ul>\n * <li>Bruce Maggs.\n * <a href=\"http://www.cs.cmu.edu/afs/cs.cmu.edu/project/pscico-guyb/realworld/www/rs_decode.ps\">\n * \"Decoding Reed-Solomon Codes\"</a> (see discussion of Forney's Formula)</li>\n * <li>J.I. Hall. <a href=\"www.mth.msu.edu/~jhall/classes/codenotes/GRS.pdf\">\n * \"Chapter 5. Generalized Reed-Solomon Codes\"</a>\n * (see discussion of Euclidean algorithm)</li>\n * </ul>\n *\n * <p>Much credit is due to William Rucklidge since portions of this code are an indirect\n * port of his C++ Reed-Solomon implementation.</p>\n *\n * @author Sean Owen\n * @author William Rucklidge\n * @author sanfordsquires\n */\nclass ReedSolomonDecoder {\n\tconstructor(field, isSloppy = true) {\n\t\tthis.field = field;\n\t\tthis.isSloppy = isSloppy;\n\t}\n\n\t/**\n\t * <p>Decodes given set of received codewords, which include both data and error-correction\n\t * codewords. Really, this means it uses Reed-Solomon to detect and correct errors, in-place,\n\t * in the input.</p>\n\t *\n\t * @param received data and error-correction codewords\n\t * @param twoS number of error-correction codewords available\n\t * @throws ReedSolomonException if decoding fails for any reason\n\t */\n\tdecode(received, twoS) {\n\t\tconst field = this.field;\n\t\tconst poly = new GenericGFPoly(field, received);\n\t\tconst syndromeCoefficients = new Int32Array(twoS);\n\t\tconst scLen = syndromeCoefficients.length;\n\t\tlet noError = true;\n\t\tconst len = received.length;\n\t\tconst generatorBase = field.getGeneratorBase();\n\t\tfor (let i = 0; i < twoS; i++) {\n\t\t\tconst evaled = poly.evaluateAt(field.exp(i + generatorBase));\n\t\t\tsyndromeCoefficients[scLen - 1 - i] = evaled;\n\t\t\tif (evaled !== 0) {\n\t\t\t\tnoError = false;\n\t\t\t}\n\t\t}\n\t\t// console.log('decode syndromeCoefficients noError:' + noError + '/twoS:' + twoS);\n\t\t// console.log(syndromeCoefficients);\n\t\t// console.log('decode received len:' + len);\n\t\t// console.log(received);\n\t\tif (noError) {\n\t\t\treturn received.slice(0, len - twoS);\n\t\t}\n\t\tconst syndrome = new GenericGFPoly(field, syndromeCoefficients);\n\t\tconst [sigma, omega] = this.runEuclideanAlgorithm(field.buildMonomial(twoS, 1), syndrome, twoS);\n\t\tconst errorLocations = this.findErrorLocations(sigma);\n\t\t// console.log('decode errorLocations sigma:' + sigma);\n\t\t// console.log(errorLocations);\n\t\tconst errorMagnitudes = this.findErrorMagnitudes(omega, errorLocations);\n\t\tfor (let i = 0; i < errorLocations.length; i++) {\n\t\t\tconst errorLocation = errorLocations[i];\n\t\t\tconst log = field.log(errorLocation);\n\t\t\tconst position = len - 1 - log;\n\t\t\t// console.log('errorLocation:' + errorLocation + '/log:' + log + '/position:' + position);\n\t\t\tif (position < 0) {\n\t\t\t\tif (this.isSloppy) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tthrow new ReedSolomonException('Bad error location');\n\t\t\t}\n\t\t\treceived[position] = GenericGF.addOrSubtract(received[position], errorMagnitudes[i]);\n\t\t}\n\t\treturn received.slice(0, len - twoS);\n\t}\n\n\trunEuclideanAlgorithm(a, b, R) {\n\t\tconst field = this.field;\n\t\t// Assume a's degree is >= b's\n\t\tif (a.getDegree() < b.getDegree()) {\n\t\t\tconst temp = a;\n\t\t\ta = b;\n\t\t\tb = temp;\n\t\t}\n\t\tlet rLast = a;\n\t\tlet r = b;\n\t\tlet tLast = field.getZero();\n\t\tlet t = field.getOne();\n\t\t// Run Euclidean algorithm until r's degree is less than R/2\n\t\twhile (r.getDegree() >= R / 2) {\n\t\t\tconst rLastLast = rLast;\n\t\t\tconst tLastLast = tLast;\n\t\t\trLast = r;\n\t\t\ttLast = t;\n\t\t\t// Divide rLastLast by rLast, with quotient in q and remainder in r\n\t\t\tif (rLast.isZero()) {\n\t\t\t\t// Oops, Euclidean algorithm already terminated?\n\t\t\t\tthrow new ReedSolomonException('r_{i-1} was zero');\n\t\t\t}\n\t\t\tr = rLastLast;\n\t\t\tlet q = field.getZero();\n\t\t\tconst rLastDegree = rLast.getDegree();\n\t\t\tconst denominatorLeadingTerm = rLast.getCoefficient(rLastDegree);\n\t\t\tconst dltInverse = field.inverse(denominatorLeadingTerm);\n\t\t\twhile (r.getDegree() >= rLastDegree && !r.isZero()) {\n\t\t\t\tconst rDegree = r.getDegree();\n\t\t\t\tconst degreeDiff = rDegree - rLastDegree;\n\t\t\t\tconst scale = field.multiply(r.getCoefficient(rDegree), dltInverse);\n\t\t\t\tq = q.addOrSubtract(field.buildMonomial(degreeDiff, scale));\n\t\t\t\tr = r.addOrSubtract(rLast.multiplyByMonomial(degreeDiff, scale));\n\t\t\t}\n\t\t\tt = q.multiply(tLast).addOrSubtract(tLastLast);\n\t\t\tif (r.getDegree() >= rLastDegree) {\n\t\t\t\tthrow new ReedSolomonException('Division algorithm failed to reduce polynomial?');\n\t\t\t}\n\t\t}\n\t\tconst sigmaTildeAtZero = t.getCoefficient(0);\n\t\tif (sigmaTildeAtZero === 0) {\n\t\t\tconsole.log('runEuclideanAlgorithm a b R t sigmaTildeAtZero:' + sigmaTildeAtZero);\n\t\t\tconsole.log(a);\n\t\t\tconsole.log(b);\n\t\t\tconsole.log(R);\n\t\t\tconsole.log(t);\n\t\t\tthrow new ReedSolomonException('sigmaTilde(0) was zero');\n\t\t}\n\t\tconst inverse = field.inverse(sigmaTildeAtZero);\n\t\tconst sigma = t.multiply(inverse);\n\t\tconst omega = r.multiply(inverse);\n\t\treturn [sigma, omega];\n\t}\n\n\tfindErrorLocations(errorLocator) {\n\t\tconst field = this.field;\n\t\t// This is a direct application of Chien's search\n\t\tconst numErrors = errorLocator.getDegree();\n\t\tif (numErrors === 1) {\n\t\t\t// shortcut\n\t\t\t// console.log('findErrorLocations errorLocator.getCoefficient(1):' + errorLocator.getCoefficient(1) + '/numErrors:' + numErrors);\n\t\t\treturn new Int32Array([errorLocator.getCoefficient(1)]);\n\t\t}\n\t\tconst result = new Int32Array(numErrors);\n\t\tlet e = 0;\n\t\tconst size = field.getSize();\n\t\t// console.log('findErrorLocations size:' + size + '/numErrors:' + numErrors);\n\t\tfor (let i = 1; i < size && e < numErrors; i++) {\n\t\t\tif (errorLocator.evaluateAt(i) === 0) {\n\t\t\t\tresult[e] = field.inverse(i);\n\t\t\t\te++;\n\t\t\t}\n\t\t}\n\t\tif (e !== numErrors && !this.isSloppy) {\n\t\t\tthrow new ReedSolomonException('Error locator degree does not match number of roots');\n\t\t}\n\n\t\t// console.log(result);\n\t\treturn result.slice(0, e);\n\t}\n\n\tfindErrorMagnitudes(errorEvaluator, errorLocations) {\n\t\tconst field = this.field;\n\t\t// This is directly applying Forney's Formula\n\t\tconst s = errorLocations.length;\n\t\tconst result = new Int32Array(s);\n\t\tfor (let i = 0; i < s; i++) {\n\t\t\tconst xiInverse = field.inverse(errorLocations[i]);\n\t\t\tlet denominator = 1;\n\t\t\tfor (let j = 0; j < s; j++) {\n\t\t\t\tif (i !== j) {\n\t\t\t\t\t//denominator = field.multiply(denominator,\n\t\t\t\t\t//    GenericGF.addOrSubtract(1, field.multiply(errorLocations[j], xiInverse)));\n\t\t\t\t\t// Above should work but fails on some Apple and Linux JDKs due to a Hotspot bug.\n\t\t\t\t\t// Below is a funny-looking workaround from Steven Parkes\n\t\t\t\t\tconst term = field.multiply(errorLocations[j], xiInverse);\n\t\t\t\t\tconst termPlus1 = (term & 0x1) === 0 ? term | 1 : term & ~1;\n\t\t\t\t\tdenominator = field.multiply(denominator, termPlus1);\n\t\t\t\t}\n\t\t\t}\n\t\t\tresult[i] = field.multiply(errorEvaluator.evaluateAt(xiInverse), field.inverse(denominator));\n\t\t\tif (field.getGeneratorBase() !== 0) {\n\t\t\t\tresult[i] = field.multiply(result[i], xiInverse);\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n}\n/**\n * <p>Implements Reed-Solomon encoding, as the name implies.</p>\n *\n * @author Sean Owen\n * @author William Rucklidge\n */\nclass ReedSolomonEncoder {\n\tconstructor(field) {\n\t\tthis.field = field;\n\t\tthis.cachedGenerators = [];\n\t\tconst coefficients = new Int32Array([1]);\n\t\tthis.cachedGenerators.push(new GenericGFPoly(field, coefficients));\n\t}\n\n\tbuildGenerator(degree) {\n\t\tconst field = this.field;\n\t\tconst cachedGenerators = this.cachedGenerators;\n\t\tconst len = cachedGenerators.length;\n\t\tif (degree >= len) {\n\t\t\tconst lastIndex = len - 1;\n\t\t\tconst generatorBase = field.getGeneratorBase();\n\t\t\tlet lastGenerator = cachedGenerators[lastIndex];\n\t\t\tfor (let d = lastIndex; d < degree; d++) {\n\t\t\t\tconst coefficients = new Int32Array([1, field.exp(d + generatorBase)]);\n\t\t\t\tconst nextGenerator = lastGenerator.multiply(new GenericGFPoly(field, coefficients));\n\t\t\t\tcachedGenerators.push(nextGenerator);\n\t\t\t\tlastGenerator = nextGenerator;\n\t\t\t}\n\t\t}\n\t\treturn cachedGenerators[degree];\n\t}\n\n\tencode(toEncode, ecBytes) {\n\t\tconst field = this.field;\n\t\tif (ecBytes === 0) {\n\t\t\tthrow new ReedSolomonException('No error correction bytes');\n\t\t}\n\t\tconst size = toEncode.length;\n\t\tlet dataBytes = size - ecBytes;\n\t\tif (dataBytes <= 0) {\n\t\t\t// console.log('size:' + size + '/ecBytes:' + ecBytes);\n\t\t\tthrow new ReedSolomonException('No data bytes provided');\n\t\t}\n\t\tconst generator = this.buildGenerator(ecBytes);\n\t\tconst infoCoefficients = new Int32Array(dataBytes);\n\t\tinfoCoefficients.set(toEncode.slice(0, dataBytes), 0);\n\t\t// System.arraycopy(toEncode, 0, infoCoefficients, 0, dataBytes);\n\t\tconst info = new GenericGFPoly(field, infoCoefficients);\n\t\tconst info2 = info.multiplyByMonomial(ecBytes, 1);\n\t\tconst remainder = info2.divide(generator)[1];\n\t\tconst coefficients = remainder.getCoefficients();\n\t\tconst numZeroCoefficients = ecBytes - coefficients.length;\n\t\tconst result = new Int32Array(size);\n\t\tresult.fill(0);\n\t\tresult.set(infoCoefficients, 0);\n\t\tconst offset = dataBytes + numZeroCoefficients;\n\t\tresult.set(coefficients, offset);\n\t\t// console.log('encode toEncode');\n\t\t// console.log(toEncode);\n\t\t// console.log('encode result');\n\t\t// console.log(result);\n\t\t// System.arraycopy(coefficients, 0, toEncode, dataBytes + numZeroCoefficients, coefficients.length);\n\t\treturn result;\n\t}\n}\n/**\n * <p>Thrown when an exception occurs during Reed-Solomon decoding, such as when\n * there are too many errors to correct.</p>\n *\n * @author Sean Owen\n */\nexport class ReedSolomonException extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t}\n}\n\nexport const AZTEC_DATA_12 = { primitive: 0x1069, bitNum: 12, b: 1 }; // x^12 + x^6 + x^5 + x^3 + 1 = 1 0000 0110 1001=4201=0x1069 r=12\nexport const AZTEC_DATA_10 = { primitive: 0x409, bitNum: 10, b: 1 }; // x^10 + x^3 + 1 =100 0000 1001=1033=0x409 r=10\nexport const AZTEC_DATA_6 = { primitive: 0x43, bitNum: 6, b: 1 }; // x^6 + x + 1=100 0011=67=0x43\nexport const AZTEC_PARAM = { primitive: 0x13, bitNum: 4, b: 1 }; // x^4 + x + 1=1 0011 = 19=0x13\nexport const QR_CODE_FIELD_256 = { primitive: 0x011d, bitNum: 8, b: 0 }; // x^8 + x^4 + x^3 + x^2 + 1=1 0001 1101=281=0x011d\nexport const DATA_MATRIX_FIELD_256 = { primitive: 0x012d, bitNum: 8, b: 1 }; // x^8 + x^5 + x^3 + x^2 + 1=1 0010 1101=297=0x012d\nexport const AZTEC_DATA_8 = DATA_MATRIX_FIELD_256;\nexport const MAXICODE_FIELD_64 = AZTEC_DATA_6;\nconst ByteAs16bit = { primitive: 0x10029, bitNum: 16, b: 1 }; // D^16+D^5+D^3+D^2+1= 1 0000 0000 0010 1101 =65581=0x10029 r=16;\nconst ByteAs14bit = { primitive: 0x402b, bitNum: 14, b: 1 }; // D^14+D^5+D^3+D+1= 100 0000 0010 1011 =16427=0x402b r=14;\nconst ByteAs12bit = AZTEC_DATA_12;\nconst ByteAs10bit = AZTEC_DATA_10;\nconst ByteAs8bit = AZTEC_DATA_8;\nconst ByteAs6bit = AZTEC_DATA_6;\nconst ByteAs4bit = AZTEC_PARAM;\n\nexport const presets = {\n\tByteAs16bit,\n\tByteAs14bit,\n\tByteAs12bit,\n\tByteAs10bit,\n\tByteAs8bit,\n\tByteAs6bit,\n\tByteAs4bit,\n\tAZTEC_DATA_12,\n\tAZTEC_DATA_10,\n\tAZTEC_DATA_6,\n\tAZTEC_PARAM,\n\tQR_CODE_FIELD_256,\n\tDATA_MATRIX_FIELD_256,\n\tAZTEC_DATA_8,\n\tMAXICODE_FIELD_64,\n};\nconst Cache = {};\nexport class ReedSolomonES {\n\tstatic encodeRaw(i32a, errorCorrectionRedundantUnitCount, primitive, bitNum, b) {\n\t\tconst key = JSON.stringify([primitive, bitNum, b, 'e']);\n\t\tlet rsEncoder = Cache[key];\n\t\tif (!rsEncoder) {\n\t\t\tconst pow = Math.pow(2, bitNum);\n\t\t\tconst ggf = new GenericGF(primitive, pow, b);\n\t\t\trsEncoder = new ReedSolomonEncoder(ggf);\n\t\t\tCache[key] = rsEncoder;\n\t\t}\n\t\treturn rsEncoder.encode(i32a, errorCorrectionRedundantUnitCount);\n\t}\n\tstatic decodeRaw(i32a, errorCorrectionRedundantUnitCount, primitive, bitNum, b, isSloppy) {\n\t\tconst key = JSON.stringify([primitive, bitNum, b, 'd']);\n\t\tlet rsDecoder = Cache[key];\n\t\tif (!rsDecoder) {\n\t\t\tconst pow = Math.pow(2, bitNum);\n\t\t\tconst ggf = new GenericGF(primitive, pow, b);\n\t\t\trsDecoder = new ReedSolomonDecoder(ggf, isSloppy);\n\t\t\tCache[key] = rsDecoder;\n\t\t}\n\t\treturn rsDecoder.decode(i32a, errorCorrectionRedundantUnitCount);\n\t}\n\tstatic copyToU8a(i32a, bitNum) {\n\t\tconst dataLen = i32a.length;\n\t\tlet lastOne = '';\n\t\tconst newDataLength = Math.ceil((dataLen * bitNum) / 8);\n\t\t// const has = (dataLen * 8) % bitNum;\n\t\tconst u8a = new Uint8Array(newDataLength);\n\t\tlet charCounter = 0;\n\t\tconst fill = new Array(bitNum);\n\t\tfill.fill('0');\n\t\tconst fill0 = fill.join('');\n\t\t// const a = [];\n\t\t// const b = [];\n\t\tfor (let octet of i32a) {\n\t\t\tconst bits = (fill0 + octet.toString(2)).slice(-1 * bitNum);\n\t\t\tconst current = lastOne + bits;\n\t\t\t// b.push(current);\n\n\t\t\tconst loopCount = Math.floor(current.length / 8);\n\t\t\tfor (let i = 0; i < loopCount; i++) {\n\t\t\t\tconst bitStr = current.substring(i * 8, (i + 1) * 8);\n\t\t\t\tu8a[charCounter] = parseInt(bitStr, 2);\n\t\t\t\t// a.push(bitStr);\n\t\t\t\tcharCounter++;\n\t\t\t}\n\t\t\tlastOne = current.substring(loopCount * 8);\n\t\t}\n\t\t// console.log(b);\n\t\t// console.log(a);\n\t\tif (!lastOne) {\n\t\t\tconst a = new Array(8 - lastOne.length);\n\t\t\ta.fill('0');\n\t\t\tu8a[charCounter] = parseInt(lastOne + a.join(''), 2);\n\t\t}\n\t\treturn u8a;\n\t}\n\tstatic copyToI32a(u8a, bitNum, isFillBit = true) {\n\t\tconst dataLen = u8a.length;\n\t\tlet lastOne = '';\n\t\tlet lcm = bitNum;\n\t\tconst bitnumHarf = bitNum / 2;\n\t\tlet add = 0;\n\t\tif (isFillBit && bitNum !== 8) {\n\t\t\tconst mod = dataLen % bitnumHarf;\n\t\t\tadd = mod > 0 ? bitnumHarf - mod : mod;\n\t\t}\n\t\t// console.log('lcm:' + lcm + '/add:' + add + '/' + bitnumHarf);\n\t\tconst newDataLength = Math.ceil(((dataLen + add) * 8) / bitNum);\n\t\tconst i32a = new Int32Array(newDataLength);\n\t\tconst fill = new Array(8);\n\t\tfill.fill('0');\n\t\tconst fill0 = fill.join('');\n\t\tlet charCounter = 0;\n\t\tfor (let octet of u8a) {\n\t\t\tconst bits = (fill0 + octet.toString(2)).slice(-8);\n\t\t\tconst current = lastOne + bits;\n\t\t\tconst loopCount = Math.floor(current.length / bitNum);\n\t\t\tfor (let i = 0; i < loopCount; i++) {\n\t\t\t\tconst bitStr = current.substring(i * bitNum, (i + 1) * bitNum);\n\t\t\t\ti32a[charCounter] = parseInt(bitStr, 2);\n\t\t\t\tcharCounter++;\n\t\t\t}\n\t\t\tlastOne = current.substring(loopCount * bitNum);\n\t\t}\n\t\t// console.log('lastOne:' + lastOne + '/newDataLength:' + newDataLength + '/bitNum:' + bitNum + '/dataLen:' + dataLen);\n\t\tif (lastOne) {\n\t\t\tconst a = new Array(bitNum - lastOne.length);\n\t\t\ta.fill('0');\n\t\t\tconst bits = lastOne + a.join('');\n\t\t\t// console.log('bits:' + bits);\n\t\t\ti32a[charCounter] = parseInt(bits, 2);\n\t\t}\n\t\t// console.log(i32a);\n\t\treturn i32a;\n\t}\n\t//2^{r}>N>K>0 ,t=(N-K)/2\n\tstatic encode(u8a, presetName, errorCorrectionRetio) {\n\t\tconst preset = presets[presetName];\n\t\tif (!preset) {\n\t\t\treturn;\n\t\t}\n\t\tconst bitNum = preset.bitNum;\n\t\tconst primitive = preset.primitive;\n\t\tconst b = preset.b;\n\t\tconst i32a = ReedSolomonES.copyToI32a(u8a, bitNum, true);\n\t\tconst newDataLength = i32a.length;\n\n\t\tconst maxWordLength = Math.pow(2, bitNum);\n\t\tconst retio = errorCorrectionRetio * 2 + 1;\n\t\tconst N = Math.ceil(retio * newDataLength);\n\t\tconst wordCount = Math.ceil(N / maxWordLength);\n\n\t\tconst wordKtmp = Math.floor(maxWordLength / retio);\n\t\tconst wordK = Math.ceil((wordKtmp > newDataLength ? wordKtmp : newDataLength) / wordCount);\n\t\tconst result = new Int32Array(newDataLength * retio);\n\t\tlet leftLength = newDataLength;\n\t\t// console.log(newDataLength + '/' + errorCorrectionRetio + '/retio:' + retio + '/wordK:' + wordK + '/wordCount:' + wordCount);\n\t\tfor (let i = 0; i < wordCount; i++) {\n\t\t\tconst wordKCurrent = leftLength > wordK ? wordK : leftLength;\n\t\t\tconst errorCorrectionRedundantUnitCount = Math.floor(wordKCurrent * errorCorrectionRetio * 2);\n\t\t\tconst tempN = wordKCurrent + errorCorrectionRedundantUnitCount;\n\t\t\tleftLength -= wordK;\n\t\t\tconst start = i * wordK;\n\t\t\tif (start > newDataLength || wordKCurrent < retio) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tconst end = start + wordKCurrent > newDataLength ? newDataLength : start + wordKCurrent;\n\t\t\tconst toEncode = new Int32Array(tempN);\n\t\t\ttoEncode.fill(0);\n\t\t\ttoEncode.set(i32a.slice(start, end), 0);\n\t\t\t// console.log('toEncode');\n\t\t\t// console.log(toEncode);\n\t\t\tconst encorded = ReedSolomonES.encodeRaw(toEncode, errorCorrectionRedundantUnitCount, primitive, bitNum, b);\n\t\t\tconst offset = tempN * i;\n\t\t\tresult.set(encorded, offset);\n\t\t\t// console.log('encorded offset:' + offset);\n\t\t\t// console.log(encorded);\n\t\t\t// console.log(result);\n\t\t}\n\t\t// console.log('encode presetName:' + presetName + '/preset:' + JSON.stringify(preset));\n\t\treturn ReedSolomonES.copyToU8a(result, bitNum);\n\t}\n\tstatic decodeStrict(u8a, presetName, errorCorrectionRetio) {\n\t\treturn ReedSolomonES.decode(u8a, presetName, errorCorrectionRetio, false);\n\t}\n\tstatic decode(u8a, presetName, errorCorrectionRetio, isSloppy) {\n\t\tconst preset = presets[presetName];\n\t\tif (!preset) {\n\t\t\treturn;\n\t\t}\n\t\tconst bitNum = preset.bitNum;\n\t\tconst primitive = preset.primitive;\n\t\tconst b = preset.b;\n\t\tconst i32a = ReedSolomonES.copyToI32a(u8a, bitNum);\n\t\tconst newDataLength = i32a.length;\n\n\t\tconst maxWordLength = Math.pow(2, bitNum);\n\t\tconst retio = errorCorrectionRetio * 2 + 1;\n\t\tconst K = Math.ceil(newDataLength / retio);\n\t\tconst wordCount = Math.ceil(newDataLength / maxWordLength);\n\n\t\tconst wordKtmp = Math.floor(maxWordLength / retio);\n\t\tconst wordK = Math.ceil((wordKtmp > K ? wordKtmp : K) / wordCount);\n\t\tconst result = new Int32Array(K);\n\t\tlet leftLength = K;\n\t\tfor (let i = 0; i < wordCount; i++) {\n\t\t\tconst wordKCurrent = leftLength > wordK ? wordK : leftLength;\n\t\t\tconst errorCorrectionRedundantUnitCount = Math.floor(wordKCurrent * errorCorrectionRetio * 2);\n\t\t\tconst tempN = wordKCurrent + errorCorrectionRedundantUnitCount;\n\t\t\tleftLength -= wordKCurrent;\n\t\t\tconst start = i * tempN;\n\t\t\tconst end = start + tempN > newDataLength ? newDataLength : start + tempN;\n\t\t\tconst toDecode = new Int32Array(tempN);\n\t\t\tconst na = i32a.slice(start, end);\n\t\t\tconsole.log('i:' + i + '/na:' + na.length + '/tempN:' + tempN);\n\t\t\tif (na.length < 1) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ttoDecode.set(na, 0);\n\t\t\tconst decorded = ReedSolomonES.decodeRaw(toDecode, errorCorrectionRedundantUnitCount, primitive, bitNum, b, isSloppy);\n\t\t\tconst offset = wordK * i;\n\t\t\tresult.set(decorded, offset);\n\t\t}\n\t\tconsole.log('decode presetName:' + presetName + '/preset:' + JSON.stringify(preset));\n\t\treturn ReedSolomonES.copyToU8a(result, bitNum);\n\t}\n}\n","/*Alessandro Corbetta\n * corbisoft@gmail.com\n * Conv Encoder simulator 1/02/11\n *\n */\nclass Util {\n\tstatic hammingWeightByInt(a, b, codewordBit) {\n\t\tlet c = a ^ b;\n\t\tlet weight = 0;\n\t\tfor (let i = 0; i < codewordBit; i++) {\n\t\t\tweight += c % 2;\n\t\t\tc >>= 1;\n\t\t}\n\t\treturn weight;\n\t}\n\tstatic hammingWeightByStr(a, b) {\n\t\tlet weight = 0;\n\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\tif (a.charAt(i) !== b.charAt(i)) {\n\t\t\t\tweight++;\n\t\t\t}\n\t\t}\n\t\treturn weight;\n\t}\n\tstatic getCodeWordStr(codeWordBitCount, codeWord) {\n\t\tconst bits = new Array(codeWordBitCount);\n\t\tlet tmpCdWrd = codeWord * 1;\n\t\tfor (let i = 0; i < codeWordBitCount; i++) {\n\t\t\tbits[i] = tmpCdWrd % 2;\n\t\t\ttmpCdWrd >>= 1;\n\t\t}\n\t\treturn bits.reverse().join('');\n\t}\n\tstatic getCodeWordBits(codeWordBitCount, codeWord) {\n\t\tconst bits = [];\n\t\tfor (let i = 0; i < codeWordBitCount; i++) {\n\t\t\tconst v = (codeWord >>> i) % 2;\n\t\t\tbits.push(v);\n\t\t}\n\t\treturn bits;\n\t}\n\tstatic uint8Cache = new Array(256);\n\tstatic getUint8BitList(uint8) {\n\t\tconst cache = Util.uint8Cache;\n\t\tif (cache[uint8]) {\n\t\t\treturn cache[uint8];\n\t\t}\n\t\tconst bits = Util.getCodeWordBits(8, uint8);\n\t\tcache[uint8] = bits;\n\t\treturn bits;\n\t}\n\tstatic toU8aFromBitArray(flatList, count) {\n\t\tconst newU8a = new Uint8Array(count);\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst start = i * 8;\n\t\t\tconst end = start + 8;\n\t\t\tconst sub = flatList.slice(start, end);\n\t\t\tlet v = 0;\n\t\t\tfor (let j = 0; j < 8; j++) {\n\t\t\t\tv += sub[j] << j;\n\t\t\t}\n\t\t\tnewU8a[i] = v;\n\t\t}\n\t\treturn newU8a;\n\t}\n}\n// Dimensione dello spazio degli stati i.e. log_2 (states) | bit parola di codice\nexport const CodifEsempioLibro540 = {\n\ttotStatesLog: 2,\n\ttotCodeBit: 3,\n\t// stato | bit di info | parola di codice | stato in out\n\tdata: [\n\t\t[0, 0, '000', 0],\n\t\t[0, 1, '111', 2],\n\t\t[1, 0, '001', 0],\n\t\t[1, 1, '110', 2],\n\t\t[2, 0, '011', 1],\n\t\t[3, 0, '101', 3],\n\t\t[3, 1, '010', 1],\n\t\t[2, 1, '100', 3],\n\t],\n};\nexport const BitLength2 = {\n\ttotStatesLog: 2,\n\ttotCodeBit: 2,\n\t// stato | bit di info | parola di codice | stato in out\n\tdata: [\n\t\t[0, 0, '00', 0],\n\t\t[0, 1, '11', 2],\n\t\t[1, 0, '00', 2],\n\t\t[1, 1, '11', 0],\n\t\t[2, 1, '01', 1],\n\t\t[2, 0, '01', 3],\n\t\t[3, 0, '01', 1],\n\t\t[3, 1, '10', 3],\n\t],\n};\nclass State {\n\tstatic totStatesLog;\n\tstatic totStatesLogSet = false;\n\tstatic getTotStatesLog() {\n\t\treturn State.totStatesLog;\n\t}\n\tstatic isTotStatesLogSet() {\n\t\treturn State.totStatesLogSet;\n\t}\n\tstatic setTotStatesLog(totStatesLog) {\n\t\tif (!State.totStatesLogSet) {\n\t\t\tState.totStatesLog = totStatesLog;\n\t\t\tState.totStatesLogSet = true;\n\t\t}\n\t}\n\tconstructor(myState) {\n\t\tthis.myState = myState;\n\t}\n\tgetMyState() {\n\t\treturn this.myState;\n\t}\n\thashCode() {\n\t\tconst prime = 31;\n\t\tconst state = this.myState;\n\t\tconst hashCode = !state ? 0 : typeof state !== 'object' ? 1 : state.hashCode();\n\t\tconst result = prime * 1 + hashCode;\n\t\treturn result;\n\t}\n\tsetMyState(myState) {\n\t\tthis.myState = myState;\n\t}\n}\nclass StateAndInfoBit {\n\tconstructor(myStateInt, myInfoBit, myCodeWord, totCodeBit = 0) {\n\t\tthis.initState = myStateInt;\n\t\tthis.myState = new State(myStateInt);\n\t\tthis.myInfoBit = myInfoBit;\n\t\tthis.myCodeWord = myCodeWord;\n\t\tthis.codeWordBitCount = totCodeBit;\n\t}\n\tgetMyState() {\n\t\treturn this.myState;\n\t}\n\tgetMyInfoBit() {\n\t\treturn this.myInfoBit;\n\t}\n\tgetMyCodeWord() {\n\t\treturn this.myCodeWord;\n\t}\n\tgetMyCodeWordStr() {\n\t\treturn Util.getCodeWordStr(this.codeWordBitCount, this.myCodeWord);\n\t}\n\tgetMyCodeWordBits() {\n\t\treturn Util.getCodeWordBits(this.codeWordBitCount, this.myCodeWord);\n\t}\n\ttoString() {\n\t\treturn JSON.stringify([this.myState.hashCode(), this.myInfoBit, this.initState]);\n\t}\n}\nclass StateWithInflow extends State {\n\tconstructor(myState) {\n\t\tsuper(myState);\n\t\tthis.isInitialized = false;\n\t\tthis.indexVect = 0;\n\t}\n\tgetMyInflows() {\n\t\treturn this.myInflows;\n\t}\n\tsetInFlow(inFlow) {\n\t\tif (!this.isInitialized) {\n\t\t\tthis.myInflows = new Array(2);\n\t\t\tthis.isInitialized = true;\n\t\t}\n\t\tthis.myInflows[this.indexVect] = inFlow;\n\t\tthis.indexVect++;\n\t}\n\ttoString() {\n\t\tconst sb = ['State: ' + this.getMyState().toString()];\n\t\tif (this.isInitialized) {\n\t\t\tconst myInflows0 = this.myInflows[0];\n\t\t\tsb.push(!myInflows0 ? ' first inflow not init ' : ' first inflow: ' + (myInflows0.getMyCodeWord() * 1).toString(2) + ' from ' + myInflows0.getMyState().getMyState().toString());\n\t\t\tconst myInflows1 = this.myInflows[1];\n\t\t\tsb.push(!myInflows1 ? ' second inflow not init ' : ' second inflow: ' + (myInflows1.getMyCodeWord() * 1).toString(2) + ' from ' + myInflows1.getMyState().getMyState().toString());\n\t\t} else {\n\t\t\tsb.push(' not yet initialized!');\n\t\t}\n\t\treturn sb.join('');\n\t}\n}\nclass DecTrallisColumn {\n\tconstructor(totStates, prev, refTrellis, codewordBit) {\n\t\tthis.column = new Array(totStates);\n\t\tthis.totStates = totStates;\n\t\tif (!prev) {\n\t\t\tthis.setFirstSection();\n\t\t\tthis.imAmFirst = true;\n\t\t} else {\n\t\t\tthis.imAmFirst = false;\n\t\t\tthis.setGeneralSection();\n\t\t\tthis.prev = prev;\n\t\t}\n\t\tthis.refTrellis = refTrellis;\n\t\tthis.codewordBit = codewordBit;\n\t}\n\tgetColumn() {\n\t\treturn this.column;\n\t}\n\tsetColumn(column) {\n\t\tthis.column = column;\n\t}\n\tsetGeneralSection(startIndex = 0) {\n\t\tconst totStates = this.totStates;\n\t\tfor (let i = startIndex; i < totStates; i++) {\n\t\t\tconst col = new DecTrallisCell();\n\t\t\tcol.setMyState(i);\n\t\t\tcol.setFake();\n\t\t\tthis.column[i] = col;\n\t\t}\n\t}\n\tsetFirstSection() {\n\t\tconst col = new DecTrallisCell();\n\t\tcol.setStarter();\n\t\tcol.setMyState(0);\n\t\tthis.column[0] = col;\n\t\tthis.setGeneralSection(1);\n\t}\n\tcreateWordSection(codeWord) {\n\t\tconst its = this.refTrellis.orderedFinalStates; //stati di arrivo sul traliccio\n\t\tlet zeroMetric = 0;\n\t\tlet rejoinZeroStat = true; //mi sono ricongiunto allo stato iniziale?\n\t\tconst state = { minMetric: 0, minState: -1, stateCons: 0, tempMetric: 0, from: new Array(2) };\n\t\tfor (const now of its) {\n\t\t\tfor (let i = 0; i < 2; i++) {\n\t\t\t\tthis.codeParBit(now, codeWord, state, i);\n\t\t\t}\n\t\t\tif (state.stateCons === 0) {\n\t\t\t\tzeroMetric = state.tempMetric;\n\t\t\t} else if (state.tempMetric < zeroMetric) {\n\t\t\t\trejoinZeroStat = false;\n\t\t\t}\n\t\t\tstate.stateCons++;\n\t\t}\n\t\tconst sb = [];\n\t\tthis.column[state.minState].recursivePrint(sb);\n\t\tconst infowordsIcarry = sb;\n\t\treturn { flushoutOrder: false, infowordsIcarry };\n\t}\n\tcodeParBit(now, codeWord, state, i) {\n\t\tlet changed = false; // ho fatto delle modifiche al tratto che considero\n\t\tconst fromFlow = now.getMyInflows(); //dato il mio stato capisco da quale coppia di stati entro\n\t\tconst stateCons = state.stateCons;\n\t\tconst currentCol = this.column[stateCons];\n\t\tconst currentFormFlow = fromFlow[i];\n\t\tconst currentForm = currentFormFlow.getMyState().getMyState() * 1; //trovo gli indici della coppia di stati di input\n\t\tstate.from[i] = currentForm;\n\t\tconst prevCol = this.prev.getColumn()[currentForm];\n\t\tif (prevCol.isActive) {\n\t\t\tconst prevMyWholeMetric = prevCol.getMyWholeMetric();\n\t\t\tconst tempMetric = Util.hammingWeightByInt(codeWord, currentFormFlow.getMyCodeWord() * 1, this.codewordBit) + prevMyWholeMetric;\n\t\t\tif (currentCol.isActive) {\n\t\t\t\t//se io sono attivo confronto\n\t\t\t\tif (tempMetric < currentCol.getMyWholeMetric()) {\n\t\t\t\t\t//devo aggiornare\n\t\t\t\t\tcurrentCol.setMyWholeMetric(tempMetric);\n\t\t\t\t\tcurrentCol.from = prevCol;\n\t\t\t\t\tcurrentCol.setMyInfoBit(currentFormFlow.getMyInfoBit());\n\t\t\t\t\tif (state.minState === -1) {\n\t\t\t\t\t\tstate.minState = stateCons;\n\t\t\t\t\t\tstate.minMetric = tempMetric;\n\t\t\t\t\t} else if (tempMetric < state.minMetric) {\n\t\t\t\t\t\tstate.minState = stateCons;\n\t\t\t\t\t\tstate.minMetric = tempMetric;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcurrentCol.isActive = true;\n\t\t\t\tcurrentCol.setMyWholeMetric(tempMetric);\n\t\t\t\tcurrentCol.from = prevCol;\n\t\t\t\tcurrentCol.setMyInfoBit(currentFormFlow.getMyInfoBit());\n\t\t\t\tif (state.minState === -1) {\n\t\t\t\t\tstate.minState = stateCons;\n\t\t\t\t\tstate.minMetric = tempMetric;\n\t\t\t\t} else if (tempMetric < state.minMetric) {\n\t\t\t\t\tstate.minState = stateCons;\n\t\t\t\t\tstate.minMetric = tempMetric;\n\t\t\t\t}\n\t\t\t}\n\t\t\tstate.tempMetric = tempMetric;\n\t\t} else {\n\t\t\tconsole.log('\\t\\t not active! skipping...');\n\t\t}\n\t\treturn {};\n\t}\n}\n\nclass DecTrallisCell {\n\tconstructor() {\n\t\tthis.isActive = false;\n\t\tthis.from = null;\n\t\tthis.myInfoBit = null;\n\t\tthis.myState = null;\n\t\tthis.isActiveForGraph = null;\n\t}\n\tgetMyState() {\n\t\treturn myState;\n\t}\n\tsetMyState(myState) {\n\t\tthis.myState = myState;\n\t}\n\tgetMyInfoBit() {\n\t\treturn this.myInfoBit;\n\t}\n\tsetMyInfoBit(myInfoBit) {\n\t\tthis.myInfoBit = myInfoBit;\n\t}\n\tsetStarter() {\n\t\tthis.isActive = true;\n\t\tthis.myWholeMetric = 0;\n\t\tthis.from = null;\n\t}\n\tsetFake() {\n\t\tthis.isActive = false;\n\t}\n\tgetMyWholeMetric() {\n\t\treturn this.myWholeMetric;\n\t}\n\tsetMyWholeMetric(myWholeMetric) {\n\t\tthis.myWholeMetric = myWholeMetric;\n\t}\n\trecursivePrint(sb) {\n\t\tif (this.from != null) {\n\t\t\tthis.from.recursivePrint(sb);\n\t\t\tsb.push(this.myInfoBit);\n\t\t}\n\t}\n}\nclass Trellis {\n\tconstructor(trellisConfig = CodifEsempioLibro540) {\n\t\tthis.trellisMap = new Map();\n\t\tthis.codingCorrespMap = new Map();\n\t\tthis.loadTrellis(trellisConfig);\n\t}\n\tloadTrellis(trellisConfig) {\n\t\tthis.totStatesLog = trellisConfig.totStatesLog;\n\t\tthis.totCodeBit = trellisConfig.totCodeBit;\n\t\tconst data = trellisConfig.data;\n\t\tconst len = 1 << this.totStatesLog; //4\n\t\tconst lenPlus = 1 << (this.totStatesLog + 1); //8\n\t\tconst ouputAlreadyConsid = new Array(len);\n\t\touputAlreadyConsid.fill(null);\n\t\tfor (let i = 0; i < lenPlus; i++) {\n\t\t\tconst row = data[i];\n\t\t\tconst state = row[0];\n\t\t\tconst infoBit = row[1];\n\t\t\tconst codeword = parseInt(row[2], 2);\n\t\t\tconst outState = row[3];\n\t\t\tconst from = new StateAndInfoBit(state, infoBit, codeword, this.totCodeBit);\n\t\t\tlet to = ouputAlreadyConsid[outState];\n\t\t\tif (to == null) {\n\t\t\t\tto = new StateWithInflow(outState);\n\t\t\t\touputAlreadyConsid[outState] = to;\n\t\t\t}\n\t\t\tconst fromKey = from.toString();\n\t\t\tthis.trellisMap.set(fromKey, to);\n\t\t\tthis.codingCorrespMap.set(fromKey, from);\n\t\t}\n\t\t//backward link 4 decoding\n\t\tconst itOnKeys = this.trellisMap.keys();\n\t\tfor (const key of itOnKeys) {\n\t\t\tconst from = this.codingCorrespMap.get(key);\n\t\t\tthis.trellisMap.get(key).setInFlow(from);\n\t\t}\n\t\tconst orderedFinalStates = [];\n\t\tfor (const value of this.trellisMap.values()) {\n\t\t\torderedFinalStates.push(value);\n\t\t}\n\t\torderedFinalStates.sort();\n\t\tthis.orderedFinalStates = ouputAlreadyConsid;\n\t\treturn true;\n\t}\n\tcodedOut(stateInput, infoBit) {\n\t\tconst stWithInfoTmp1 = new StateAndInfoBit(stateInput.myState, infoBit);\n\t\tconst stWithInfoTmp2 = this.codingCorrespMap.get(stWithInfoTmp1.toString());\n\t\tconst codeWord = stWithInfoTmp2.getMyCodeWordBits();\n\t\tconst state = this.trellisMap.get(stWithInfoTmp2.toString());\n\t\treturn { codeWord, state };\n\t}\n}\nexport class Encoder {\n\tconstructor(trellisConfig) {\n\t\tthis.trellis = new Trellis(trellisConfig);\n\t\tthis.totStatesLog = this.trellis.totStatesLog;\n\t\tthis.codeWordBit = this.trellis.totCodeBit;\n\t\tthis.reset();\n\t}\n\treset() {\n\t\tthis.state = new State(0);\n\t}\n\tencode(infoBitInput) {\n\t\tconst infoBit = infoBitInput !== 0 ? 1 : 0;\n\t\tconst outWord = this.trellis.codedOut(this.state, infoBit);\n\t\tthis.state = outWord.state;\n\t\treturn outWord.codeWord;\n\t}\n}\nexport class DecodingTrallisSupport {\n\tconstructor(totStates, refTrallis) {\n\t\tthis.totStates = totStates;\n\t\tthis.refTrallis = refTrallis;\n\t\tthis.codewordBit = this.refTrallis.totCodeBit;\n\t\tthis.reset();\n\t}\n\treset() {\n\t\tthis.myColumns = [this.createDecTrallisColumn()];\n\t\tthis.myTime = 0;\n\t}\n\tcreateDecTrallisColumn(col = null) {\n\t\treturn new DecTrallisColumn(this.totStates, col, this.refTrallis, this.codewordBit);\n\t}\n\taddSection(codeWord) {\n\t\tconst myCol = this.myColumns[this.myTime];\n\t\tconst newCol = this.createDecTrallisColumn(myCol);\n\t\tthis.myTime++;\n\t\tthis.myColumns[this.myTime] = newCol;\n\t\tconst decOutput = newCol.createWordSection(codeWord);\n\t\treturn decOutput.infowordsIcarry;\n\t}\n}\nexport class VitDecoder {\n\tconstructor(trellisConfig) {\n\t\tthis.trellis = new Trellis(trellisConfig);\n\t\tthis.totStatesLog = this.trellis.totStatesLog;\n\t\tthis.codeWordBit = this.trellis.totCodeBit;\n\t\tthis.reset();\n\t}\n\treset() {\n\t\tthis.myState = new State(0);\n\t\tthis.myDecSupp = new DecodingTrallisSupport(1 << this.totStatesLog, this.trellis);\n\t}\n\taddTransmittedWord(word) {\n\t\tconst codeWordNum = parseInt(word, 2);\n\t\treturn this.myDecSupp.addSection(codeWordNum).join('');\n\t}\n\taddSection(codeWordNum) {\n\t\treturn this.myDecSupp.addSection(codeWordNum);\n\t}\n}\nexport class ConvolutionalCode {\n\tconstructor(trellisConfig) {\n\t\tthis.cache = {};\n\t\tthis.encoder = new Encoder(trellisConfig);\n\t\tthis.decoder = new VitDecoder(trellisConfig);\n\t}\n\treset(trellisConfig) {\n\t\tthis.encoder = new Encoder(trellisConfig);\n\t\tthis.decoder = new VitDecoder(trellisConfig);\n\t}\n\tencode(u8a) {\n\t\tconst encoder = this.encoder;\n\t\tconst bitsList = [];\n\t\tencoder.reset();\n\t\tlet lastList = [];\n\t\tfor (const uint8 of u8a) {\n\t\t\tconst bits = Util.getUint8BitList(uint8);\n\t\t\tbitsList.push(bits.join(''));\n\t\t\tfor (const bit of bits) {\n\t\t\t\tconst cwBits = encoder.encode(bit);\n\t\t\t\tlastList.push(cwBits);\n\t\t\t}\n\t\t}\n\t\tconst flatList = lastList.flat();\n\t\tconst count = u8a.length * encoder.codeWordBit;\n\t\treturn Util.toU8aFromBitArray(flatList, count);\n\t}\n\tdecode(u8a) {\n\t\tconst decoder = this.decoder;\n\t\tdecoder.reset();\n\t\tlet bitsList = [];\n\t\tfor (const uint8 of u8a) {\n\t\t\tconst bits = Util.getUint8BitList(uint8);\n\t\t\tfor (const bit of bits) {\n\t\t\t\tbitsList.push(bit);\n\t\t\t}\n\t\t}\n\t\tconst bitsLista = bitsList.flat();\n\t\tconst codeWordBit = decoder.codeWordBit;\n\t\tconst count = Math.ceil(bitsLista.length / codeWordBit);\n\t\tlet lastOne = [];\n\t\tfor (let i = 0; i < count; i++) {\n\t\t\tconst start = i * codeWordBit;\n\t\t\tconst end = start + codeWordBit;\n\t\t\tconst sub = bitsLista.slice(start, end);\n\t\t\tlet v = 0;\n\t\t\tfor (let j = 0; j < codeWordBit; j++) {\n\t\t\t\tv += sub[j] << j;\n\t\t\t}\n\t\t\tlastOne = decoder.addSection(v);\n\t\t}\n\t\tconst countByte = Math.ceil(u8a.length / codeWordBit);\n\t\treturn Util.toU8aFromBitArray(lastOne, countByte);\n\t}\n}\n","import { Oscillator, Reciver } from 'webaudio-modem';\nimport { ReedSolomonES } from 'reedsolomon.es';\nimport { CodifEsempioLibro540, ConvolutionalCode, BitLength2 } from 'convolutionalcode.es';\nconst defaultConf = {\n\tactiveDuration: 40,\n\tpauseDuration: 0,\n\tbinVlueThreshold: 200,\n\tspanDuration: 40,\n\tunsherpMaskGain: 2,\n};\nexport const RSByteLength = ['ByteAs4bit', 'ByteAs6bit', 'ByteAs8bit', 'ByteAs10bit', 'ByteAs12bit', 'ByteAs14bit', 'ByteAs16bit'];\nexport class bufferdwebaudiomodem {\n\tconstructor(condition) {\n\t\t//\n\t\tthis.init(condition);\n\t\tthis.oscillator = null;\n\t\tthis.reciver = null;\n\t\tthis.msPerByte = 2;\n\t\tthis.onEncodeProgress = (progress) => {\n\t\t\tconsole.log(progress);\n\t\t};\n\t\tthis.onStateChange = (state) => {\n\t\t\tconsole.log(state);\n\t\t};\n\t}\n\tinit(condition = defaultConf) {\n\t\tthis.activeDuration = condition.activeDuration;\n\t\tthis.pauseDuration = condition.pauseDuration;\n\t\tthis.binVlueThreshold = condition.binVlueThreshold;\n\t\tthis.spanDuration = condition.spanDuration;\n\t\tthis.isUseRS = condition.isUseRS;\n\t\tthis.errorCrrectionReduntantRetio = condition.errorCrrectionReduntantRetio;\n\t\tthis.presetName = condition.presetName;\n\t\tthis.isUseCC = condition.isUseCC;\n\t\tthis.ccRate = condition.ccRate === 2 ? BitLength2 : CodifEsempioLibro540;\n\t\tif (this.isUseCC * 1 === 1) {\n\t\t\tthis.ConvolutionalCode = new ConvolutionalCode(this.ccRate);\n\t\t}\n\t\tthis.correctRate = (this.isUseRS * 1 === 1 ? 1 + this.errorCrrectionReduntantRetio * 2 : 1) * (this.isUseCC * 1 === 1 ? (this.ccRate === BitLength2 ? 2 : 3) : 1);\n\t\tthis.msPerByte = 2 * (this.activeDuration + this.pauseDuration) * this.correctRate;\n\n\t\tthis.unsherpMaskGain = condition.unsherpMaskGain;\n\t}\n\tencode(inputU8a) {\n\t\tif (!this.oscillator) {\n\t\t\tthis.oscillator = new Oscillator();\n\t\t}\n\t\tthis.oscillator.init();\n\t\tthis.oscillator.activeDuration = this.activeDuration;\n\t\tthis.oscillator.pauseDuration = this.pauseDuration;\n\t\tlet inputU8aEncoded = inputU8a;\n\t\tif (this.isUseRS * 1 === 1 && RSByteLength.includes(this.presetName)) {\n\t\t\tinputU8aEncoded = ReedSolomonES.encode(inputU8aEncoded, this.presetName, this.errorCrrectionReduntantRetio);\n\t\t}\n\t\tif (this.isUseCC * 1 === 1) {\n\t\t\tinputU8aEncoded = this.ConvolutionalCode.encode(inputU8aEncoded);\n\t\t}\n\t\tthis.oscillator.onProgress = this.funcOnEncodeProgress;\n\t\tconst func = async (resolve) => {\n\t\t\tconst end = () => {\n\t\t\t\tresolve();\n\t\t\t\tthis.oscillator.end();\n\t\t\t};\n\t\t\tawait this.oscillator.encode(inputU8aEncoded, end, end, false);\n\t\t};\n\t\treturn new Promise(func);\n\t}\n\tdecodeStart() {\n\t\tif (!this.reciver) {\n\t\t\tthis.reciver = new Reciver();\n\t\t\tthis.reciver.setOutputType('Uint8Array');\n\t\t}\n\t\tthis.reciver.stop();\n\t\tconsole.log('decodeStart stop 1');\n\t\tthis.reciver.onStateChange = this.onStateChange;\n\t\tthis.reciver.onOutput = (u8a) => {\n\t\t\tlet decodeU8a = u8a;\n\t\t\tconsole.log(u8a);\n\t\t\tconsole.log('onOutput 1:' + decodeU8a + '/this.isUseCC:' + this.isUseCC + '/this.isUseRS :' + this.isUseRS + '/' + this.reciver.outputType);\n\t\t\tif (this.isUseCC * 1 === 1) {\n\t\t\t\tconsole.log('onOutput 2:' + decodeU8a);\n\t\t\t\tdecodeU8a = this.ConvolutionalCode.decode(decodeU8a);\n\t\t\t\tconsole.log('onOutput 3:' + decodeU8a);\n\t\t\t}\n\t\t\tconsole.log('onOutput 4:' + decodeU8a);\n\t\t\tif (this.isUseRS * 1 === 1 && RSByteLength.includes(this.presetName)) {\n\t\t\t\tconsole.log('onOutput 5:' + decodeU8a);\n\t\t\t\tdecodeU8a = ReedSolomonES.decode(decodeU8a, this.presetName, this.errorCrrectionReduntantRetio);\n\t\t\t\tconsole.log('onOutput 6:' + decodeU8a);\n\t\t\t}\n\n\t\t\tconsole.log('onOutput 7:' + decodeU8a);\n\t\t\tthis.funcOnDecoded(decodeU8a);\n\t\t};\n\t\tthis.reciver.setBinVlueThreshold(this.binVlueThreshold);\n\t\tthis.reciver.setSpanDuration(this.spanDuration);\n\t\tthis.reciver.setUnsherpMaskGain(this.unsherpMaskGain);\n\t\tthis.reciver.setOutputType('Uint8Array');\n\n\t\tsetTimeout(() => {\n\t\t\tthis.reciver.start();\n\t\t\tthis.reciver.setOutputType('Uint8Array');\n\t\t\tconsole.log('decodeStart start 1');\n\t\t}, 100);\n\t}\n\tdecodeStop() {\n\t\tconsole.log('decodeStop stop');\n\t\tif (this.reciver) {\n\t\t\tthis.reciver.stop();\n\t\t}\n\t}\n\n\tsetOnEncodeProgress(func) {\n\t\tthis.funcOnEncodeProgress = func;\n\t}\n\tsetOnDecoded(func) {\n\t\tthis.funcOnDecoded = func;\n\t}\n}\n","import { V } from './util/V.js';\nimport { B64Util } from 'b64util.es/b64util.js';\nimport { bufferdwebaudiomodem } from './bufferdwebaudiomodem.js';\n\nV.init();\nclass Encoder {\n\tconstructor(webaudiomodem, encodBtnId, clearBtnId, encodeInputId = 'encode-input', progressId, transmissionTimeId = 'transmission-time', incrementTimesId = 'increment-times') {\n\t\tthis.webaudiomodem = webaudiomodem;\n\t\tconst encodBtnElm = V.gid(encodBtnId);\n\t\tconst clearBtnElm = V.gid(clearBtnId);\n\t\tconst encodeInputElm = V.gid(encodeInputId);\n\t\tconst progressElm = V.gid(progressId);\n\t\tconst transmissionTimeElm = V.gid(transmissionTimeId);\n\t\tconst incrementTimesElm = V.gid(incrementTimesId);\n\t\tconst func = async () => {\n\t\t\tthis.webaudiomodem.init();\n\t\t\tconst val = encodeInputElm.value;\n\t\t\tconsole.log(val + '/' + this.webaudiomodem.msPerByte);\n\t\t\tconst u8a = B64Util.s2u8a(val);\n\t\t\tconst tt = Math.ceil(this.webaudiomodem.msPerByte * u8a.length) / 1000;\n\t\t\ttransmissionTimeElm.textContent = tt + 'sec';\n\t\t\tconst it = this.webaudiomodem.correctRate;\n\t\t\tincrementTimesElm.textContent = 'x' + it;\n\t\t};\n\t\tthis.calcSecFunc = func;\n\t\tV.ael(encodeInputElm, 'input', func);\n\t\tconst progressBarFunc = (progress) => {\n\t\t\tprogressElm.style.width = progress * 100 + '%';\n\t\t};\n\t\tV.ael(encodBtnElm, 'click', async () => {\n\t\t\tV.sa(encodBtnElm, 'disabled', 'disabled');\n\t\t\tconsole.time('encodBtnElm');\n\t\t\tawait this.webaudiomodem.encode(encodeInputElm.value);\n\t\t\tconsole.timeEnd('encodBtnElm');\n\t\t\tencodBtnElm.removeAttribute('disabled');\n\t\t\tprogressBarFunc(100);\n\t\t\tsetTimeout(() => {\n\t\t\t\tprogressBarFunc(0);\n\t\t\t\tencodBtnElm.blur();\n\t\t\t}, 5000);\n\t\t});\n\t\tV.ael(clearBtnElm, 'click', () => {\n\t\t\tencodeInputElm.value = '';\n\t\t\tencodBtnElm.removeAttribute('disabled');\n\t\t\tclearBtnElm.blur();\n\t\t});\n\n\t\tthis.webaudiomodem.onProgress = progressBarFunc;\n\t\tsetTimeout(() => {\n\t\t\tprogressBarFunc(0);\n\t\t});\n\t\tfunc();\n\t}\n\tstop() {}\n\tstart() {}\n}\nclass Decoder {\n\tconstructor(webaudiomodem, outputId = 'output', clearId = 'clearBtn', codeId = 'code', recieverSateId = 'reciever-sate') {\n\t\tthis.webaudiomodem = webaudiomodem;\n\t\tthis.outputElm = V.gid(outputId);\n\t\tthis.clearbtnElm = V.gid(clearId);\n\t\tthis.codeElm = V.gid(codeId);\n\t\tthis.recieverSateElm = V.gid(recieverSateId);\n\t\tV.ael(this.clearbtnElm, 'click', (e) => {\n\t\t\tthis.outputElm.value = '';\n\t\t\te.target.blur();\n\t\t});\n\t\tthis.webaudiomodem.onOutput = (input) => {\n\t\t\t// console.log(this.outputElm.value + input);\n\t\t\tthis.outputElm.value += B64Util.u8aToUtf8(input);\n\t\t};\n\t\tthis.webaudiomodem.onTrace = (text) => {\n\t\t\tthis.codeElm.textContent = text;\n\t\t};\n\t\t// this.webaudiomodem.decodeStop();\n\t\tthis.webaudiomodem.onStateChange = (state) => {\n\t\t\tthis.recieverSateElm = state;\n\t\t};\n\t}\n\tstop() {\n\t\tthis.webaudiomodem.decodeStop();\n\t}\n\tstart() {\n\t\tthis.webaudiomodem.decodeStart();\n\t}\n}\n\nexport class WebAudioModem {\n\tconstructor(tabIds) {\n\t\tthis.map = {};\n\t\tthis.map[tabIds[0]] = () => {\n\t\t\treturn this.encoder;\n\t\t};\n\t\tthis.map[tabIds[1]] = () => {\n\t\t\treturn this.decoder;\n\t\t};\n\t\tthis.bufferdwebaudiomodem = new bufferdwebaudiomodem();\n\t\tthis.onProgress = () => {};\n\t\tthis.onOutput = () => {};\n\t\tthis.pauseDurationElm = V.gid('pause-duration');\n\t\tthis.activeDurationElm = V.gid('active-duration');\n\t\tthis.binVlueThresholdElm = V.gid('bin-value-threshold');\n\t\tthis.spanDurationElm = V.gid('span-duration');\n\t\tthis.unsherpMaskGainElm = V.gid('unsherp-mask-gain');\n\t\tthis.isUseRSElm = V.gid('is-use-rs');\n\t\tthis.ecrResioElm = V.gid('error-correct-reduntant-retio');\n\t\tthis.bitNumElm = V.gid('bit-num');\n\t\tthis.isUseCCElm = V.gid('is-use-cc');\n\t\tthis.ccRateElm = V.gid('cc-rate');\n\t}\n\tbuildConf() {\n\t\tconst bitNum = this.bitNumElm.value;\n\t\tconst errorCrrectionReduntantRetio = this.ecrResioElm.value / 100;\n\t\tconst presetName = 'ByteAs' + bitNum + 'bit';\n\t\tconst isUseRS = this.isUseRSElm.value;\n\t\tconst isUseCC = this.isUseCCElm.value;\n\t\tconst ccRate = this.ccRateElm.value * 1;\n\t\tconst activeDuration = this.activeDurationElm.value * 1;\n\t\tconst pauseDuration = this.pauseDurationElm.value * 1;\n\t\tconst binVlueThreshold = this.binVlueThresholdElm.value * 1;\n\t\tconst spanDuration = this.spanDurationElm.value * 1;\n\t\tconst unsherpMaskGain = this.unsherpMaskGainElm.value * 1;\n\t\treturn { isUseRS, errorCrrectionReduntantRetio, presetName, isUseCC, ccRate, activeDuration, pauseDuration, binVlueThreshold, spanDuration, unsherpMaskGain };\n\t}\n\tinit() {\n\t\tthis.bufferdwebaudiomodem.init(this.buildConf());\n\t\tthis.msPerByte = this.bufferdwebaudiomodem.msPerByte;\n\t\tthis.correctRate = this.bufferdwebaudiomodem.correctRate;\n\t}\n\tasync encode(input, onEncodeProgress = this.onProgress) {\n\t\tthis.init();\n\t\tconst u8a = B64Util.s2u8a(input);\n\t\tthis.bufferdwebaudiomodem.setOnEncodeProgress(onEncodeProgress);\n\t\tawait this.bufferdwebaudiomodem.encode(u8a);\n\t}\n\tdecodeStart(onDecoded = this.onOutput) {\n\t\tthis.init();\n\t\tthis.bufferdwebaudiomodem.setOnDecoded(onDecoded);\n\t\tthis.bufferdwebaudiomodem.decodeStart();\n\t}\n\tdecodeStop() {\n\t\tthis.bufferdwebaudiomodem.decodeStop();\n\t}\n\tbuildDecoder(outputId, clearId, codeId) {\n\t\tthis.decoder = new Decoder(this, outputId, clearId, codeId);\n\t}\n\tbuildEncoder(encodBtnId, clearBtnId, encodeInputId, progressId) {\n\t\tthis.encoder = new Encoder(this, encodBtnId, clearBtnId, encodeInputId, progressId);\n\t\tconst func = this.encoder.calcSecFunc;\n\t\tV.ael(this.pauseDurationElm, 'change', func);\n\t\tV.ael(this.activeDurationElm, 'change', func);\n\t\tV.ael(this.isUseRSElm, 'change', func);\n\t\tV.ael(this.ecrResioElm, 'change', func);\n\t\tV.ael(this.bitNumElm, 'change', func);\n\t\tV.ael(this.isUseCCElm, 'change', func);\n\t\tV.ael(this.ccRateElm, 'change', func);\n\t}\n\tswitchView(tabId) {\n\t\tfor (const [key, value] of Object.entries(this.map)) {\n\t\t\tif (key === tabId) {\n\t\t\t\tvalue().start();\n\t\t\t} else {\n\t\t\t\tvalue().stop();\n\t\t\t}\n\t\t}\n\t}\n}\nexport class WebAudioModemView {\n\tconstructor(tabIds, wam) {\n\t\tfor (let tabId of tabIds) {\n\t\t\tV.ael(tabId, 'click', this.showTab(tabId, tabIds));\n\t\t}\n\t\tthis.wam = wam;\n\t}\n\tshowTab(selectTabId, tabIds) {\n\t\tconst suffix = '-body';\n\t\tconst tabIdsWithSuffix = [];\n\t\tfor (let tabId of tabIds) {\n\t\t\ttabIdsWithSuffix.push(tabId + suffix);\n\t\t}\n\t\treturn () => {\n\t\t\tthis.showTabExec(selectTabId, tabIds);\n\t\t\tthis.showTabExec(selectTabId + suffix, tabIdsWithSuffix);\n\t\t\tthis.wam.switchView(selectTabId);\n\t\t};\n\t}\n\tshowTabExec(selectTabId, tabIds, prefixis = ['']) {\n\t\tfor (let prefix of prefixis) {\n\t\t\tconst cn = prefix + 'selected';\n\t\t\tfor (let tabId of tabIds) {\n\t\t\t\tif (tabId === selectTabId) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconst elm = V.gid(tabId);\n\t\t\t\tif (elm.classList.contains(cn)) {\n\t\t\t\t\telm.classList.remove(cn);\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst elmSelected = V.gid(selectTabId);\n\t\t\telmSelected.classList.add(cn);\n\t\t}\n\t}\n}\nconst tabIds = ['encoder', 'decoder'];\nconst wam = new WebAudioModem(tabIds);\nnew WebAudioModemView(tabIds, wam);\nconst outputId = 'decoder-output';\nconst clearId = 'decode-clear';\nconst codeId = 'decode-code';\nwam.buildDecoder(outputId, clearId, codeId);\nconst encodBtnId = 'encode-action';\nconst encodeInputId = 'encode-input';\nconst clearBtnId = 'encode-clear';\nconst progressId = 'progress';\nwam.buildEncoder(encodBtnId, clearBtnId, encodeInputId, progressId);\n"],"sourceRoot":""}